{"ast":null,"code":"var _jsxFileName = \"/Users/yuzhuping/Desktop/first-quick-react/src/App.js\";\nimport React from 'react';\nimport 'rbx/index.css';\nimport { Button, Container, Title } from 'rbx';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nconst schedule = {\n  \"title\": \"CS Courses for 2018-2019\",\n  \"courses\": [{\n    \"id\": \"F101\",\n    \"title\": \"Computer Science: Concepts, Philosophy, and Connections\",\n    \"meets\": \"MWF 11:00-11:50\"\n  }, {\n    \"id\": \"F110\",\n    \"title\": \"Intro Programming for non-majors\",\n    \"meets\": \"MWF 10:00-10:50\"\n  }, {\n    \"id\": \"F111\",\n    \"title\": \"Fundamentals of Computer Programming I\",\n    \"meets\": \"MWF 13:00-13:50\"\n  }, {\n    \"id\": \"F211\",\n    \"title\": \"Fundamentals of Computer Programming II\",\n    \"meets\": \"TuTh 12:30-13:50\"\n  }]\n};\n\nconst Banner = ({\n  title\n}) => /*#__PURE__*/React.createElement(Title, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}, title || '[loading...]');\n\nconst buttonColor = selected => selected ? 'success' : null;\n\nconst TermSelector = ({\n  state\n}) => /*#__PURE__*/React.createElement(Button.Group, {\n  hasAddons: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }\n}, Object.values(terms).map(value => /*#__PURE__*/React.createElement(Button, {\n  key: value,\n  color: buttonColor(value === state.term),\n  onClick: () => state.setTerm(value),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }\n}, value)));\n\nconst CourseList = ({\n  courses\n}) => {\n  const [term, setTerm] = useState('Fall');\n  const [selected, toggle] = useSelection();\n  const termCourses = courses.filter(course => term === getCourseTerm(course));\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TermSelector, {\n    state: {\n      term,\n      setTerm\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, termCourses.map(course => /*#__PURE__*/React.createElement(Course, {\n    key: course.id,\n    course: course,\n    state: {\n      selected,\n      toggle\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }\n  }))));\n};\n\nconst terms = {\n  F: 'Fall',\n  W: 'Winter',\n  S: 'Spring'\n};\n\nconst getCourseTerm = course => terms[course.id.charAt(0)];\n\nconst getCourseNumber = course => course.id.slice(1, 4);\n\nconst Course = ({\n  course,\n  state\n}) => /*#__PURE__*/React.createElement(Button, {\n  color: buttonColor(state.selected.includes(course)),\n  onClick: () => state.toggle(course),\n  disabled: hasConflict(course, state.selected),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }\n}, getCourseTerm(course), \" CS \", getCourseNumber(course), \": \", course.title);\n\nconst hasConflict = (course, selected) => selected.some(selection => courseConflict(course, selection));\n\nconst useSelection = () => {\n  const [selected, setSelected] = useState([]);\n\n  const toggle = x => {\n    setSelected(selected.includes(x) ? selected.filter(y => y !== x) : [x].concat(selected));\n  };\n\n  return [selected, toggle];\n};\n\nconst meetsPat = /^ *((?:M|Tu|W|Th|F)+) +(\\d\\d?):(\\d\\d) *[ -] *(\\d\\d?):(\\d\\d) *$/;\n\nconst timeParts = meets => {\n  const [match, days, hh1, mm1, hh2, mm2] = meetsPat.exec(meets) || [];\n  return !match ? {} : {\n    days,\n    hours: {\n      start: hh1 * 60 + mm1 * 1,\n      end: hh2 * 60 + mm2 * 1\n    }\n  };\n};\n\nconst App = () => {\n  const [schedule, setSchedule] = useState({\n    title: '',\n    courses: []\n  });\n  const url = 'https://courses.cs.northwestern.edu/394/data/cs-courses.php';\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const response = await fetch(url);\n      if (!response.ok) throw response;\n      const json = await response.json();\n      setSchedule(json);\n    };\n\n    fetchSchedule();\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Banner, {\n    title: schedule.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CourseList, {\n    courses: schedule.courses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/yuzhuping/Desktop/first-quick-react/src/App.js"],"names":["React","Button","Container","Title","useState","useEffect","schedule","Banner","title","buttonColor","selected","TermSelector","state","Object","values","terms","map","value","term","setTerm","CourseList","courses","toggle","useSelection","termCourses","filter","course","getCourseTerm","id","F","W","S","charAt","getCourseNumber","slice","Course","includes","hasConflict","some","selection","courseConflict","setSelected","x","y","concat","meetsPat","timeParts","meets","match","days","hh1","mm1","hh2","mm2","exec","hours","start","end","App","setSchedule","url","fetchSchedule","response","fetch","ok","json"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'rbx/index.css';\nimport { Button, Container, Title } from 'rbx';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst schedule = {\n  \"title\": \"CS Courses for 2018-2019\",\n  \"courses\": [\n    {\n      \"id\": \"F101\",\n      \"title\": \"Computer Science: Concepts, Philosophy, and Connections\",\n      \"meets\": \"MWF 11:00-11:50\"\n    },\n    {\n      \"id\": \"F110\",\n      \"title\": \"Intro Programming for non-majors\",\n      \"meets\": \"MWF 10:00-10:50\"\n    },\n    {\n      \"id\": \"F111\",\n      \"title\": \"Fundamentals of Computer Programming I\",\n      \"meets\": \"MWF 13:00-13:50\"\n    },\n    {\n      \"id\": \"F211\",\n      \"title\": \"Fundamentals of Computer Programming II\",\n      \"meets\": \"TuTh 12:30-13:50\"\n    }\n  ]\n};\n\nconst Banner = ({ title }) => (\n  <Title>{ title || '[loading...]' }</Title>\n);\n\nconst buttonColor = selected => (\n  selected ? 'success' : null\n);\n\nconst TermSelector = ({ state }) => (\n  <Button.Group hasAddons>\n  { Object.values(terms)\n      .map(value => \n        <Button key={value}\n          color={ buttonColor(value === state.term) }\n          onClick={ () => state.setTerm(value) }\n          >\n          { value }\n        </Button>\n      )\n  }\n  </Button.Group>\n);\n\nconst CourseList = ({ courses }) => {\n  const [term, setTerm] = useState('Fall');\n  const [selected, toggle] = useSelection();\n  const termCourses = courses.filter(course => term === getCourseTerm(course));\n \n  return (\n    <React.Fragment>\n      <TermSelector state={ { term, setTerm } } />\n      <Button.Group>\n        { termCourses.map(course => <Course key={ course.id } course={ course } state={ { selected, toggle } } />) }\n      </Button.Group>\n    </React.Fragment>\n  );\n};\n\nconst terms = { F: 'Fall', W: 'Winter', S: 'Spring'};\n\nconst getCourseTerm = course => (\n  terms[course.id.charAt(0)]\n);\n\nconst getCourseNumber = course => (\n  course.id.slice(1, 4)\n);\n\nconst Course = ({ course, state }) => (\n  <Button color={ buttonColor(state.selected.includes(course)) }\n    onClick={ () => state.toggle(course) }\n    disabled={ hasConflict(course, state.selected) }\n    >\n    { getCourseTerm(course) } CS { getCourseNumber(course) }: { course.title }\n  </Button>\n);\n\nconst hasConflict = (course, selected) => (\n  selected.some(selection => courseConflict(course, selection))\n);\n\nconst useSelection = () => {\n  const [selected, setSelected] = useState([]);\n  const toggle = (x) => {\n    setSelected(selected.includes(x) ? selected.filter(y => y !== x) : [x].concat(selected))\n  };\n  return [ selected, toggle ];\n};\n\nconst meetsPat = /^ *((?:M|Tu|W|Th|F)+) +(\\d\\d?):(\\d\\d) *[ -] *(\\d\\d?):(\\d\\d) *$/;\n\nconst timeParts = meets => {\n  const [match, days, hh1, mm1, hh2, mm2] = meetsPat.exec(meets) || [];\n  return !match ? {} : {\n    days,\n    hours: {\n      start: hh1 * 60 + mm1 * 1,\n      end: hh2 * 60 + mm2 * 1\n    }\n  };\n};\n\nconst App = () => {\n  const [schedule, setSchedule] = useState({ title: '', courses: [] });\n  const url = 'https://courses.cs.northwestern.edu/394/data/cs-courses.php';\n\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const response = await fetch(url);\n      if (!response.ok) throw response;\n      const json = await response.json();\n      setSchedule(json);\n    }\n    fetchSchedule();\n  }, [])\n\n  return (\n    <Container>\n      <Banner title={ schedule.title } />\n      <CourseList courses={ schedule.courses } />\n    </Container>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}