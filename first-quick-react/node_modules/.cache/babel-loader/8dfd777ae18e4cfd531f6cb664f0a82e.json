{"ast":null,"code":"import _defineProperty from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory } from \"./factory\";\nexport var makePropTypes = makePropTypesFactory(function (vars) {\n  return {\n    tooltip: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    tooltipActive: PropTypes.bool,\n    tooltipColor: PropTypes.oneOf(vars.colors),\n    tooltipMultiline: PropTypes.bool,\n    tooltipPosition: PropTypes.oneOf(vars.tooltipPositions),\n    tooltipResponsive: PropTypes.objectOf(PropTypes.oneOf(vars.tooltipPositions))\n  };\n});\nexport var transform = function transform(props) {\n  var _ref;\n\n  var className = props.className,\n      tooltip = props.tooltip,\n      tooltipActive = props.tooltipActive,\n      tooltipColor = props.tooltipColor,\n      tooltipMultiline = props.tooltipMultiline,\n      tooltipPosition = props.tooltipPosition,\n      _props$tooltipRespons = props.tooltipResponsive,\n      tooltipResponsive = _props$tooltipRespons === void 0 ? {} : _props$tooltipRespons,\n      rest = tslib_1.__rest(props, [\"className\", \"tooltip\", \"tooltipActive\", \"tooltipColor\", \"tooltipMultiline\", \"tooltipPosition\", \"tooltipResponsive\"]);\n\n  return Object.assign({\n    className: classNames.apply(void 0, [(_ref = {\n      \"is-tooltip-active\": tooltipActive\n    }, _defineProperty(_ref, \"is-tooltip-\".concat(tooltipColor), tooltipColor), _defineProperty(_ref, \"is-tooltip-multiline\", tooltipMultiline), _defineProperty(_ref, \"is-tooltip-\".concat(tooltipPosition), tooltipPosition), _defineProperty(_ref, \"tooltip\", tooltip), _ref)].concat(_toConsumableArray(Object.keys(tooltipResponsive).map(function (breakpoint) {\n      return \"is-tooltip-\".concat(tooltipResponsive[breakpoint], \"-\").concat(breakpoint);\n    })), [className]))\n  }, tooltip !== undefined ? {\n    \"data-tooltip\": tooltip\n  } : {}, rest);\n};\nexport var makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);","map":{"version":3,"sources":["../../../src/base/helpers/tooltip.ts"],"names":[],"mappings":";;;AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AAEA,SACE,oBADF,EAEE,8BAFF,QAIO,WAJP;AAmBA,OAAO,IAAM,aAAa,GAAG,oBAAoB,CAAC,UAAA,IAAI;AAAA,SAAK;AACzD,IAAA,OAAO,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CADgD;AAEzD,IAAA,aAAa,EAAE,SAAS,CAAC,IAFgC;AAGzD,IAAA,YAAY,EAAE,SAAS,CAAC,KAAV,CAAgB,IAAI,CAAC,MAArB,CAH2C;AAIzD,IAAA,gBAAgB,EAAE,SAAS,CAAC,IAJ6B;AAKzD,IAAA,eAAe,EAAE,SAAS,CAAC,KAAV,CAAgB,IAAI,CAAC,gBAArB,CALwC;AAMzD,IAAA,iBAAiB,EAAE,SAAS,CAAC,QAAV,CAAmB,SAAS,CAAC,KAAV,CAAgB,IAAI,CAAC,gBAArB,CAAnB;AANsC,GAAL;AAAA,CAAL,CAA1C;AASP,OAAO,IAAM,SAAS,GAGlB,SAHS,SAGT,CAAA,KAAK,EAAG;AAAA;;AAAA,MAER,SAFQ,GAUN,KAVM,CAER,SAFQ;AAAA,MAGR,OAHQ,GAUN,KAVM,CAGR,OAHQ;AAAA,MAIR,aAJQ,GAUN,KAVM,CAIR,aAJQ;AAAA,MAKR,YALQ,GAUN,KAVM,CAKR,YALQ;AAAA,MAMR,gBANQ,GAUN,KAVM,CAMR,gBANQ;AAAA,MAOR,eAPQ,GAUN,KAVM,CAOR,eAPQ;AAAA,8BAUN,KAVM,CAQR,iBARQ;AAAA,MAQR,iBARQ,sCAQY,EARZ;AAAA,MASR,IATQ,GASR,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,WAAA,EAAA,SAAA,EAAA,eAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,iBAAA,EAAA,mBAAA,CAAA,CATQ;;AAYV,SAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,SAAS,EAAE,UAAU,MAAV;AAEP,2BAAqB;AAFd,kDAGQ,YAHR,GAGyB,YAHzB,yBAIP,sBAJO,EAIiB,gBAJjB,8CAKQ,eALR,GAK4B,eAL5B,oCAMP,OANO,oCAQN,MAAM,CAAC,IAAP,CAAY,iBAAZ,EAA+B,GAA/B,CACD,UAAA,UAAU;AAAA,kCACM,iBAAiB,CAAC,UAAD,CADvB,cACuC,UADvC;AAAA,KADT,CARM,IAYT,SAZS;AADb,GAAA,EAeM,OAAO,KAAK,SAAZ,GAAwB;AAAE,oBAAgB;AAAlB,GAAxB,GAAsD,EAf5D,EAgBK,IAhBL,CAAA;AAkBD,CAjCM;AAmCP,OAAO,IAAM,uBAAuB,GAAG,8BAA8B,CACnE,aADmE,EAEnE,SAFmE,CAA9D","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory, } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n    tooltip: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    tooltipActive: PropTypes.bool,\n    tooltipColor: PropTypes.oneOf(vars.colors),\n    tooltipMultiline: PropTypes.bool,\n    tooltipPosition: PropTypes.oneOf(vars.tooltipPositions),\n    tooltipResponsive: PropTypes.objectOf(PropTypes.oneOf(vars.tooltipPositions)),\n}));\nexport const transform = props => {\n    const { className, tooltip, tooltipActive, tooltipColor, tooltipMultiline, tooltipPosition, tooltipResponsive = {} } = props, rest = tslib_1.__rest(props, [\"className\", \"tooltip\", \"tooltipActive\", \"tooltipColor\", \"tooltipMultiline\", \"tooltipPosition\", \"tooltipResponsive\"]);\n    return Object.assign({ className: classNames({\n            \"is-tooltip-active\": tooltipActive,\n            [`is-tooltip-${tooltipColor}`]: tooltipColor,\n            \"is-tooltip-multiline\": tooltipMultiline,\n            [`is-tooltip-${tooltipPosition}`]: tooltipPosition,\n            tooltip,\n        }, ...Object.keys(tooltipResponsive).map(breakpoint => `is-tooltip-${tooltipResponsive[breakpoint]}-${breakpoint}`), className) }, (tooltip !== undefined ? { \"data-tooltip\": tooltip } : {}), rest);\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);\n//# sourceMappingURL=tooltip.js.map"]},"metadata":{},"sourceType":"module"}