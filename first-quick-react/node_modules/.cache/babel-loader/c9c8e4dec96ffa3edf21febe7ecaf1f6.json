{"ast":null,"code":"import PropTypes from \"prop-types\";\nimport { DEFAULTS } from \"./variables\";\nexport var makePropTypesFactory = function makePropTypesFactory(makePropTypes) {\n  return function (variables) {\n    return makePropTypes(Object.assign({}, DEFAULTS, variables));\n  };\n};\nexport var makeValidatingTransformFactory = function makeValidatingTransformFactory(makePropTypesFunc, transformFunc) {\n  return function () {\n    var variables = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULTS;\n    var propTypes = makePropTypesFunc(variables);\n    return function (props, componentName) {\n      var location = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"prop\";\n      PropTypes.checkPropTypes(propTypes, props, location, componentName);\n      return transformFunc(props);\n    };\n  };\n};\nexport var makeRootValidatingTransformFactory = function makeRootValidatingTransformFactory() {\n  for (var _len = arguments.length, mvtfs = new Array(_len), _key = 0; _key < _len; _key++) {\n    mvtfs[_key] = arguments[_key];\n  }\n\n  return function (variables) {\n    var vtfs = mvtfs.map(function (func) {\n      return func(Object.assign({}, DEFAULTS, variables));\n    });\n    return function (props, componentName) {\n      var location = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"prop\";\n      return vtfs.reduce(function (acc, vtf) {\n        return vtf(acc, componentName, location);\n      }, props);\n    };\n  };\n};","map":{"version":3,"sources":["../../../src/base/helpers/factory.ts"],"names":[],"mappings":"AAAA,OAAO,SAAP,MAAsB,YAAtB;AAGA,SAAS,QAAT,QAA+C,aAA/C;AAYA,OAAO,IAAM,oBAAoB,GAAiC,SAArD,oBAAqD,CAAA,aAAa;AAAA,SAAI,UAAA,SAAS;AAAA,WAC1F,aAAa,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,QAAN,EAAmB,SAAnB,CAAA,CAD6E;AAAA,GAAb;AAAA,CAAxE;AAgCP,OAAO,IAAM,8BAA8B,GAAG,SAAjC,8BAAiC,CAI5C,iBAJ4C,EAK5C,aAL4C;AAAA,SAMoB,YAEL;AAAA,QAD3D,SAC2D,uEAD/C,QAC+C;AAC3D,QAAM,SAAS,GAAG,iBAAiB,CAAC,SAAD,CAAnC;AAEA,WAAO,UAAC,KAAD,EAAQ,aAAR,EAA4C;AAAA,UAArB,QAAqB,uEAAV,MAAU;AACjD,MAAA,SAAS,CAAC,cAAV,CAAyB,SAAzB,EAAoC,KAApC,EAA2C,QAA3C,EAAqD,aAArD;AACA,aAAO,aAAa,CAAC,KAAD,CAApB;AACD,KAHD;AAID,GAf6C;AAAA,CAAvC;AA6BP,OAAO,IAAM,kCAAkC,GAAG,SAArC,kCAAqC;AAAA,oCAI7C,KAJ6C;AAI7C,IAAA,KAJ6C;AAAA;;AAAA,SAK7C,UAAC,SAAD,EAA6C;AAChD,QAAM,IAAI,GAAG,KAAK,CAAC,GAAN,CAAU,UAAA,IAAI;AAAA,aAAI,IAAI,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,QAAN,EAAmB,SAAnB,CAAA,CAAR;AAAA,KAAd,CAAb;AACA,WAAO,UAKL,KALK,EAML,aANK;AAAA,UAOL,QAPK,uEAOc,MAPd;AAAA,aAYL,IAAI,CAAC,MAAL,CAAY,UAAC,GAAD,EAAM,GAAN;AAAA,eAAc,GAAG,CAAC,GAAD,EAAM,aAAN,EAAqB,QAArB,CAAjB;AAAA,OAAZ,EAA6D,KAA7D,CAZK;AAAA,KAAP;AAaD,GApBiD;AAAA,CAA3C","sourceRoot":"","sourcesContent":["import PropTypes from \"prop-types\";\nimport { DEFAULTS } from \"./variables\";\nexport const makePropTypesFactory = makePropTypes => variables => makePropTypes(Object.assign({}, DEFAULTS, variables));\nexport const makeValidatingTransformFactory = (makePropTypesFunc, transformFunc) => (variables = DEFAULTS) => {\n    const propTypes = makePropTypesFunc(variables);\n    return (props, componentName, location = \"prop\") => {\n        PropTypes.checkPropTypes(propTypes, props, location, componentName);\n        return transformFunc(props);\n    };\n};\nexport const makeRootValidatingTransformFactory = (...mvtfs) => (variables) => {\n    const vtfs = mvtfs.map(func => func(Object.assign({}, DEFAULTS, variables)));\n    return (props, componentName, location = \"prop\") => vtfs.reduce((acc, vtf) => vtf(acc, componentName, location), props);\n};\n//# sourceMappingURL=factory.js.map"]},"metadata":{},"sourceType":"module"}