{"ast":null,"code":"import _defineProperty from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { Checkbox } from \"./checkbox\";\nimport { Radio } from \"./radio\";\nexport var LABEL_DEFAULTS = {\n  sizes: [\"small\", \"medium\", \"large\"]\n};\n\nvar identifyLabelDiscriminator = function identifyLabelDiscriminator(children) {\n  var discriminator = \"label\";\n  React.Children.forEach(children, function (child, i) {\n    if (typeof child === \"object\" && child !== null && \"type\" in child) {\n      if (child.type === Checkbox || child.type === \"input\" && child.props.type === \"checkbox\") {\n        discriminator = \"checkbox\";\n      } else if (child.type === Radio || child.type === \"input\" && child.props.type === \"radio\") {\n        discriminator = \"radio\";\n      } else if (child.type === React.Fragment) {\n        discriminator = identifyLabelDiscriminator(child.props.children);\n      }\n    }\n  });\n  return discriminator;\n};\n\nexport var Label = forwardRefAs(function (_a, ref) {\n  var _classNames;\n\n  var className = _a.className,\n      disabled = _a.disabled,\n      size = _a.size,\n      rest = tslib_1.__rest(_a, [\"className\", \"disabled\", \"size\"]);\n\n  var discriminator = identifyLabelDiscriminator(rest.children);\n  return React.createElement(Generic, Object.assign({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(discriminator), discriminator), _defineProperty(_classNames, \"is-disabled\", disabled), _defineProperty(_classNames, \"is-\".concat(size), size), _classNames), className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"label\"\n});\nLabel.displayName = \"Label\";\nLabel.propTypes = {\n  disabled: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};","map":{"version":3,"sources":["../../../src/elements/form/label.tsx"],"names":[],"mappings":";;AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAGA,SAAS,QAAT,QAAyB,YAAzB;AACA,SAAS,KAAT,QAAsB,SAAtB;AAEA,OAAO,IAAM,cAAc,GAAG;AAC5B,EAAA,KAAK,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB;AADqB,CAAvB;;AAsBP,IAAM,0BAA0B,GAAG,SAA7B,0BAA6B,CAAC,QAAD,EAA8B;AAC/D,MAAI,aAAa,GAAG,OAApB;AAEA,EAAA,KAAK,CAAC,QAAN,CAAe,OAAf,CAAuB,QAAvB,EAAiC,UAAC,KAAD,EAAQ,CAAR,EAAa;AAC5C,QAAI,OAAO,KAAP,KAAiB,QAAjB,IAA6B,KAAK,KAAK,IAAvC,IAA+C,UAAU,KAA7D,EAAoE;AAClE,UACE,KAAK,CAAC,IAAN,KAAe,QAAf,IACC,KAAK,CAAC,IAAN,KAAe,OAAf,IACE,KAAK,CAAC,KAAN,CAAmD,IAAnD,KACC,UAJN,EAKE;AACA,QAAA,aAAa,GAAG,UAAhB;AACD,OAPD,MAOO,IACL,KAAK,CAAC,IAAN,KAAe,KAAf,IACC,KAAK,CAAC,IAAN,KAAe,OAAf,IACE,KAAK,CAAC,KAAN,CAAmD,IAAnD,KAA4D,OAH1D,EAIL;AACA,QAAA,aAAa,GAAG,OAAhB;AACD,OANM,MAMA,IAAI,KAAK,CAAC,IAAN,KAAe,KAAK,CAAC,QAAzB,EAAmC;AACxC,QAAA,aAAa,GAAG,0BAA0B,CACvC,KAAK,CAAC,KAAN,CACE,QAFqC,CAA1C;AAID;AACF;AACF,GAtBD;AAwBA,SAAO,aAAP;AACD,CA5BD;;AA8BA,OAAO,IAAM,KAAK,GAAG,YAAY,CAC/B,UAAC,EAAD,EAAyC,GAAzC,EAAgD;AAAA;;AAAA,MAA7C,SAA6C,GAApB,EAAoB,CAA7C,SAA6C;AAAA,MAAlC,QAAkC,GAApB,EAAoB,CAAlC,QAAkC;AAAA,MAAxB,IAAwB,GAApB,EAAoB,CAAxB,IAAwB;AAAA,MAAlB,IAAkB,GAAlB,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,WAAA,EAAA,UAAA,EAAA,MAAA,CAAA,CAAkB;;AAC9C,MAAM,aAAa,GAAG,0BAA0B,CAAC,IAAI,CAAC,QAAN,CAAhD;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,IAAA,SAAS,EAAE,UAAU,2DAEb,aAFa,GAEK,aAFL,gCAGjB,aAHiB,EAGF,QAHE,6CAIV,IAJU,GAID,IAJC,iBAMnB,SANmB,CADf;AASN,IAAA,GAAG,EAAE;AATC,GAAA,EAUF,IAVE,CAAR,CADF;AAcD,CAlB8B,EAmB/B;AAAE,EAAA,EAAE,EAAE;AAAN,CAnB+B,CAA1B;AAsBP,KAAK,CAAC,WAAN,GAAoB,OAApB;AACA,KAAK,CAAC,SAAN,GAAkB;AAChB,EAAA,QAAQ,EAAE,SAAS,CAAC,IADJ;AAEhB,EAAA,IAAI,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB;AAFU,CAAlB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { Checkbox } from \"./checkbox\";\nimport { Radio } from \"./radio\";\nexport const LABEL_DEFAULTS = {\n    sizes: [\"small\", \"medium\", \"large\"],\n};\nconst identifyLabelDiscriminator = (children) => {\n    let discriminator = \"label\";\n    React.Children.forEach(children, (child, i) => {\n        if (typeof child === \"object\" && child !== null && \"type\" in child) {\n            if (child.type === Checkbox ||\n                (child.type === \"input\" &&\n                    child.props.type ===\n                        \"checkbox\")) {\n                discriminator = \"checkbox\";\n            }\n            else if (child.type === Radio ||\n                (child.type === \"input\" &&\n                    child.props.type === \"radio\")) {\n                discriminator = \"radio\";\n            }\n            else if (child.type === React.Fragment) {\n                discriminator = identifyLabelDiscriminator(child.props\n                    .children);\n            }\n        }\n    });\n    return discriminator;\n};\nexport const Label = forwardRefAs((_a, ref) => {\n    var { className, disabled, size } = _a, rest = tslib_1.__rest(_a, [\"className\", \"disabled\", \"size\"]);\n    const discriminator = identifyLabelDiscriminator(rest.children);\n    return (React.createElement(Generic, Object.assign({ className: classNames({\n            [`${discriminator}`]: discriminator,\n            \"is-disabled\": disabled,\n            [`is-${size}`]: size,\n        }, className), ref: ref }, rest)));\n}, { as: \"label\" });\nLabel.displayName = \"Label\";\nLabel.propTypes = {\n    disabled: PropTypes.bool,\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n//# sourceMappingURL=label.js.map"]},"metadata":{},"sourceType":"module"}