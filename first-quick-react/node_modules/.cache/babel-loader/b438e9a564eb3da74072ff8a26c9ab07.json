{"ast":null,"code":"import _defineProperty from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { DEFAULTS } from \"../../base/helpers/variables\";\nimport { ColumnGroup } from \"./column-group\";\nexport var COLUMN_DEFAULTS = {\n  sizes: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, \"one-third\", \"two-thirds\", \"one-quarter\", \"half\", \"three-quarters\", \"one-fifth\", \"two-fifths\", \"three-fifths\", \"four-fifths\", \"full\"]\n};\nexport var Column = Object.assign(forwardRefAs(function (_a, ref) {\n  var _classNames;\n\n  var className = _a.className,\n      mobile = _a.mobile,\n      tablet = _a.tablet,\n      desktop = _a.desktop,\n      widescreen = _a.widescreen,\n      fullhd = _a.fullhd,\n      touch = _a.touch,\n      narrow = _a.narrow,\n      offset = _a.offset,\n      size = _a.size,\n      rest = tslib_1.__rest(_a, [\"className\", \"mobile\", \"tablet\", \"desktop\", \"widescreen\", \"fullhd\", \"touch\", \"narrow\", \"offset\", \"size\"]);\n\n  var breakpoints = {\n    desktop: desktop,\n    fullhd: fullhd,\n    mobile: mobile,\n    tablet: tablet,\n    touch: touch,\n    widescreen: widescreen\n  };\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"column\", (_classNames = {}, _defineProperty(_classNames, \"is-\".concat(size), size !== undefined), _defineProperty(_classNames, \"is-offset-\".concat(offset), offset !== undefined), _defineProperty(_classNames, \"is-narrow\", narrow), _classNames), Object.keys(breakpoints).map(function (breakpoint) {\n      var _ref;\n\n      var value = breakpoints[breakpoint];\n      return value === undefined ? {} : (_ref = {}, _defineProperty(_ref, \"is-\".concat(value.size, \"-\").concat(breakpoint), value.size !== undefined), _defineProperty(_ref, \"is-narrow-\".concat(breakpoint), value.narrow), _defineProperty(_ref, \"is-offset-\".concat(value.offset, \"-\").concat(breakpoint), value.offset !== undefined), _ref);\n    }).reduce(function (acc, cv) {\n      return Object.assign({}, acc, cv);\n    }, {}), className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"div\"\n}), {\n  Group: ColumnGroup\n});\nColumn.displayName = \"Column\";\nvar ColumnSizeModifierPropTypes = {\n  narrow: PropTypes.bool,\n  offset: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nColumn.propTypes = Object.assign({}, DEFAULTS.breakpoints.map(function (breakpoint) {\n  return _defineProperty({}, breakpoint, PropTypes.shape(ColumnSizeModifierPropTypes));\n}).reduce(function (acc, cv) {\n  return Object.assign({}, acc, cv);\n}, {}), ColumnSizeModifierPropTypes);","map":{"version":3,"sources":["../../../src/grid/columns/column.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { DEFAULTS } from \"../../base/helpers/variables\";\nimport { ColumnGroup } from \"./column-group\";\nexport const COLUMN_DEFAULTS = {\n    sizes: [\n        0,\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        \"one-third\",\n        \"two-thirds\",\n        \"one-quarter\",\n        \"half\",\n        \"three-quarters\",\n        \"one-fifth\",\n        \"two-fifths\",\n        \"three-fifths\",\n        \"four-fifths\",\n        \"full\",\n    ],\n};\nexport const Column = Object.assign(forwardRefAs((_a, ref) => {\n    var { className, mobile, tablet, desktop, widescreen, fullhd, touch, narrow, offset, size } = _a, rest = tslib_1.__rest(_a, [\"className\", \"mobile\", \"tablet\", \"desktop\", \"widescreen\", \"fullhd\", \"touch\", \"narrow\", \"offset\", \"size\"]);\n    const breakpoints = {\n        desktop,\n        fullhd,\n        mobile,\n        tablet,\n        touch,\n        widescreen,\n    };\n    return (React.createElement(Generic, Object.assign({ className: classNames(\"column\", {\n            [`is-${size}`]: size !== undefined,\n            [`is-offset-${offset}`]: offset !== undefined,\n            \"is-narrow\": narrow,\n        }, Object.keys(breakpoints)\n            .map(breakpoint => {\n            const value = breakpoints[breakpoint];\n            return value === undefined\n                ? {}\n                : {\n                    [`is-${value.size}-${breakpoint}`]: value.size !== undefined,\n                    [`is-narrow-${breakpoint}`]: value.narrow,\n                    [`is-offset-${value.offset}-${breakpoint}`]: value.offset !== undefined,\n                };\n        })\n            .reduce((acc, cv) => (Object.assign({}, acc, cv)), {}), className), ref: ref }, rest)));\n}, { as: \"div\" }), { Group: ColumnGroup });\nColumn.displayName = \"Column\";\nconst ColumnSizeModifierPropTypes = {\n    narrow: PropTypes.bool,\n    offset: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\nColumn.propTypes = Object.assign({}, DEFAULTS.breakpoints\n    .map(breakpoint => ({\n    [breakpoint]: PropTypes.shape(ColumnSizeModifierPropTypes),\n}))\n    .reduce((acc, cv) => (Object.assign({}, acc, cv)), {}), ColumnSizeModifierPropTypes);\n//# sourceMappingURL=column.js.map"]},"metadata":{},"sourceType":"module"}