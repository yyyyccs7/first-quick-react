{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nexport const Help = forwardRefAs((_a, ref) => {\n  var {\n    className,\n    color\n  } = _a,\n      rest = tslib_1.__rest(_a, [\"className\", \"color\"]);\n\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"help\", {\n      [`is-${color}`]: color\n    }, className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"p\"\n});\nHelp.displayName = \"Help\";\nHelp.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};","map":{"version":3,"sources":["../../../src/elements/form/help.tsx"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAUA,OAAO,MAAM,IAAI,GAAG,YAAY,CAC9B,CAAC,EAAD,EAAgC,GAAhC,KAAuC;MAAtC;AAAE,IAAA,SAAF;AAAa,IAAA;AAAb,MAAkB,E;MAAE,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,WAAA,EAAA,OAAA,CAAA,C;;AAAmB,SACtC,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,IAAA,SAAS,EAAE,UAAU,CAAC,MAAD,EAAS;AAAE,OAAC,MAAM,KAAK,EAAZ,GAAiB;AAAnB,KAAT,EAAqC,SAArC,CADf;AAEN,IAAA,GAAG,EAAE;AAFC,GAAA,EAGF,IAHE,CAAR,CADsC;AAMvC,CAP6B,EAQ9B;AAAE,EAAA,EAAE,EAAE;AAAN,CAR8B,CAAzB;AAWP,IAAI,CAAC,WAAL,GAAmB,MAAnB;AACA,IAAI,CAAC,SAAL,GAAiB;AACf,EAAA,KAAK,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB;AADQ,CAAjB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nexport const Help = forwardRefAs((_a, ref) => {\n    var { className, color } = _a, rest = tslib_1.__rest(_a, [\"className\", \"color\"]);\n    return (React.createElement(Generic, Object.assign({ className: classNames(\"help\", { [`is-${color}`]: color }, className), ref: ref }, rest)));\n}, { as: \"p\" });\nHelp.displayName = \"Help\";\nHelp.propTypes = {\n    color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n//# sourceMappingURL=help.js.map"]},"metadata":{},"sourceType":"module"}