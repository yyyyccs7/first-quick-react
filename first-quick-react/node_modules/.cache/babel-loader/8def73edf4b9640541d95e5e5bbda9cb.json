{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { ImageContainer } from \"./image-container\";\nexport const Image = Object.assign(forwardRefAs((_a, ref) => {\n  var {\n    className,\n    rounded\n  } = _a,\n      rest = tslib_1.__rest(_a, [\"className\", \"rounded\"]);\n\n  return React.createElement(Generic, Object.assign({\n    className: classNames({\n      \"is-rounded\": rounded\n    }, className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"img\"\n}), {\n  Container: ImageContainer\n});\nImage.displayName = \"Image\";\nImage.propTypes = {\n  rounded: PropTypes.bool\n};","map":{"version":3,"sources":["../../../src/elements/image/image.tsx"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAEA,SAAS,cAAT,QAA+B,mBAA/B;AAQA,OAAO,MAAM,KAAK,GAAG,MAAM,CAAC,MAAP,CACnB,YAAY,CACV,CAAC,EAAD,EAAkC,GAAlC,KAAyC;MAAxC;AAAE,IAAA,SAAF;AAAa,IAAA;AAAb,MAAoB,E;MAAE,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,WAAA,EAAA,SAAA,CAAA,C;;AAAmB,SACxC,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,IAAA,SAAS,EAAE,UAAU,CAAC;AAAE,oBAAc;AAAhB,KAAD,EAA4B,SAA5B,CADf;AAEN,IAAA,GAAG,EAAE;AAFC,GAAA,EAGF,IAHE,CAAR,CADwC;AAMzC,CAPS,EAQV;AAAE,EAAA,EAAE,EAAE;AAAN,CARU,CADO,EAWnB;AAAE,EAAA,SAAS,EAAE;AAAb,CAXmB,CAAd;AAcP,KAAK,CAAC,WAAN,GAAoB,OAApB;AACA,KAAK,CAAC,SAAN,GAAkB;AAChB,EAAA,OAAO,EAAE,SAAS,CAAC;AADH,CAAlB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { ImageContainer } from \"./image-container\";\nexport const Image = Object.assign(forwardRefAs((_a, ref) => {\n    var { className, rounded } = _a, rest = tslib_1.__rest(_a, [\"className\", \"rounded\"]);\n    return (React.createElement(Generic, Object.assign({ className: classNames({ \"is-rounded\": rounded }, className), ref: ref }, rest)));\n}, { as: \"img\" }), { Container: ImageContainer });\nImage.displayName = \"Image\";\nImage.propTypes = {\n    rounded: PropTypes.bool,\n};\n//# sourceMappingURL=image.js.map"]},"metadata":{},"sourceType":"module"}