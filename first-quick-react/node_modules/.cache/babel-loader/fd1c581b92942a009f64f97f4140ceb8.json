{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n  backgroundColor: PropTypes.oneOf([...vars.colors, ...vars.shades]),\n  italic: PropTypes.bool,\n  textAlign: PropTypes.oneOf(vars.textAlignments),\n  textColor: PropTypes.oneOf([...vars.colors, ...vars.shades]),\n  textSize: PropTypes.oneOf(vars.textSizes),\n  textTransform: PropTypes.oneOf(vars.textTransforms),\n  textWeight: PropTypes.oneOf(vars.textWeights)\n}));\nexport const transform = props => {\n  const {\n    backgroundColor,\n    className,\n    italic,\n    textAlign,\n    textColor,\n    textSize,\n    textTransform,\n    textWeight\n  } = props,\n        rest = tslib_1.__rest(props, [\"backgroundColor\", \"className\", \"italic\", \"textAlign\", \"textColor\", \"textSize\", \"textTransform\", \"textWeight\"]);\n\n  return Object.assign({\n    className: classNames({\n      [`has-background-${backgroundColor}`]: backgroundColor,\n      [`has-text-${textColor}`]: textColor,\n      \"is-italic\": italic,\n      [`is-${textTransform}`]: textTransform,\n      [`has-text-${textAlign}`]: textAlign,\n      [`has-text-weight-${textWeight}`]: textWeight,\n      [`is-size-${textSize}`]: textSize\n    }, className)\n  }, rest);\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);","map":{"version":3,"sources":["../../../src/base/helpers/typography.ts"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AAEA,SACE,oBADF,EAEE,8BAFF,QAIO,WAJP;AAkBA,OAAO,MAAM,aAAa,GAAG,oBAAoB,CAAC,IAAI,KAAK;AACzD,EAAA,eAAe,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,GAAG,IAAI,CAAC,MAAT,EAAiB,GAAG,IAAI,CAAC,MAAzB,CAAhB,CADwC;AAEzD,EAAA,MAAM,EAAE,SAAS,CAAC,IAFuC;AAGzD,EAAA,SAAS,EAAE,SAAS,CAAC,KAAV,CAAgB,IAAI,CAAC,cAArB,CAH8C;AAIzD,EAAA,SAAS,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,GAAG,IAAI,CAAC,MAAT,EAAiB,GAAG,IAAI,CAAC,MAAzB,CAAhB,CAJ8C;AAKzD,EAAA,QAAQ,EAAE,SAAS,CAAC,KAAV,CAAgB,IAAI,CAAC,SAArB,CAL+C;AAMzD,EAAA,aAAa,EAAE,SAAS,CAAC,KAAV,CAAgB,IAAI,CAAC,cAArB,CAN0C;AAOzD,EAAA,UAAU,EAAE,SAAS,CAAC,KAAV,CAAgB,IAAI,CAAC,WAArB;AAP6C,CAAL,CAAL,CAA1C;AAUP,OAAO,MAAM,SAAS,GAA8C,KAAK,IAAG;AAC1E,QAAM;AACJ,IAAA,eADI;AAEJ,IAAA,SAFI;AAGJ,IAAA,MAHI;AAIJ,IAAA,SAJI;AAKJ,IAAA,SALI;AAMJ,IAAA,QANI;AAOJ,IAAA,aAPI;AAQJ,IAAA;AARI,MAUF,KAVJ;AAAA,QASE,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,iBAAA,EAAA,WAAA,EAAA,QAAA,EAAA,WAAA,EAAA,WAAA,EAAA,UAAA,EAAA,eAAA,EAAA,YAAA,CAAA,CATF;;AAYA,SAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,SAAS,EAAE,UAAU,CACnB;AACE,OAAC,kBAAkB,eAAe,EAAlC,GAAuC,eADzC;AAEE,OAAC,YAAY,SAAS,EAAtB,GAA2B,SAF7B;AAGE,mBAAa,MAHf;AAIE,OAAC,MAAM,aAAa,EAApB,GAAyB,aAJ3B;AAKE,OAAC,YAAY,SAAS,EAAtB,GAA2B,SAL7B;AAME,OAAC,mBAAmB,UAAU,EAA9B,GAAmC,UANrC;AAOE,OAAC,WAAW,QAAQ,EAApB,GAAyB;AAP3B,KADmB,EAUnB,SAVmB;AADvB,GAAA,EAaK,IAbL,CAAA;AAeD,CA5BM;AA8BP,OAAO,MAAM,uBAAuB,GAAG,8BAA8B,CACnE,aADmE,EAEnE,SAFmE,CAA9D","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory, } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n    backgroundColor: PropTypes.oneOf([...vars.colors, ...vars.shades]),\n    italic: PropTypes.bool,\n    textAlign: PropTypes.oneOf(vars.textAlignments),\n    textColor: PropTypes.oneOf([...vars.colors, ...vars.shades]),\n    textSize: PropTypes.oneOf(vars.textSizes),\n    textTransform: PropTypes.oneOf(vars.textTransforms),\n    textWeight: PropTypes.oneOf(vars.textWeights),\n}));\nexport const transform = props => {\n    const { backgroundColor, className, italic, textAlign, textColor, textSize, textTransform, textWeight } = props, rest = tslib_1.__rest(props, [\"backgroundColor\", \"className\", \"italic\", \"textAlign\", \"textColor\", \"textSize\", \"textTransform\", \"textWeight\"]);\n    return Object.assign({ className: classNames({\n            [`has-background-${backgroundColor}`]: backgroundColor,\n            [`has-text-${textColor}`]: textColor,\n            \"is-italic\": italic,\n            [`is-${textTransform}`]: textTransform,\n            [`has-text-${textAlign}`]: textAlign,\n            [`has-text-weight-${textWeight}`]: textWeight,\n            [`is-size-${textSize}`]: textSize,\n        }, className) }, rest);\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);\n//# sourceMappingURL=typography.js.map"]},"metadata":{},"sourceType":"module"}