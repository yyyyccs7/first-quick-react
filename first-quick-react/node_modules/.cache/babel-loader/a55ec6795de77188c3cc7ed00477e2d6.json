{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory } from \"./factory\";\nexport const makeResponsiveBreakpointPropTypes = makePropTypesFactory(vars => ({\n  display: PropTypes.shape({\n    only: PropTypes.bool,\n    value: PropTypes.oneOf(vars.displays).isRequired\n  }),\n  hide: PropTypes.shape({\n    only: PropTypes.bool,\n    value: PropTypes.bool.isRequired\n  }),\n  textAlign: PropTypes.shape({\n    only: PropTypes.bool,\n    value: PropTypes.oneOf(vars.textAlignments).isRequired\n  }),\n  textSize: PropTypes.shape({\n    only: PropTypes.bool,\n    value: PropTypes.oneOf(vars.textSizes).isRequired\n  })\n}));\nexport const makeResponsiveBreakpointLimitedPropTypes = makePropTypesFactory(vars => ({\n  display: PropTypes.shape({\n    value: PropTypes.oneOf(vars.displays).isRequired\n  }),\n  hide: PropTypes.shape({\n    value: PropTypes.bool.isRequired\n  }),\n  textAlign: PropTypes.shape({\n    value: PropTypes.oneOf(vars.textAlignments).isRequired\n  }),\n  textSize: PropTypes.shape({\n    value: PropTypes.oneOf(vars.textSizes).isRequired\n  })\n}));\nexport const makePropTypes = makePropTypesFactory(vars => ({\n  responsive: PropTypes.shape(vars.breakpoints.map(breakpoint => ({\n    [breakpoint]: PropTypes.shape(vars.breakpointsLimited.indexOf(breakpoint) === -1 ? makeResponsiveBreakpointPropTypes(vars) : makeResponsiveBreakpointLimitedPropTypes(vars))\n  })).reduce((acc, cv) => Object.assign({}, acc, cv), {}))\n}));\nexport const transform = props => {\n  const {\n    className,\n    responsive\n  } = props,\n        rest = tslib_1.__rest(props, [\"className\", \"responsive\"]);\n\n  return Object.assign({\n    className: classNames(responsive !== undefined ? Object.keys(responsive).filter(breakpoint => responsive[breakpoint] !== undefined).map(breakpoint => {\n      const names = {};\n      const {\n        display,\n        hide,\n        textAlign,\n        textSize\n      } = responsive[breakpoint];\n\n      if (display !== undefined) {\n        const value = display.value;\n        const only = \"only\" in display ? display.only === true : false;\n        names[`is-${value}-${breakpoint}${only ? \"-only\" : \"\"}`] = value;\n      }\n\n      if (hide !== undefined) {\n        const value = hide.value;\n        const only = \"only\" in hide ? hide.only === true : false;\n        names[`is-hidden-${breakpoint}${only ? \"-only\" : \"\"}`] = value;\n      }\n\n      if (textAlign !== undefined) {\n        const value = textAlign.value;\n        const only = \"only\" in textAlign ? textAlign.only === true : false;\n        names[`has-text-${value}-${breakpoint}${only ? \"-only\" : \"\"}`] = value;\n      }\n\n      if (textSize !== undefined) {\n        const value = textSize.value;\n        const only = \"only\" in textSize ? textSize.only === true : false;\n        names[`is-size-${value}-${breakpoint}${only ? \"-only\" : \"\"}`] = value;\n      }\n\n      return names;\n    }).reduce((acc, cv) => Object.assign({}, acc, cv), {}) : undefined, className)\n  }, rest);\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);","map":{"version":3,"sources":["../../../src/base/helpers/responsive.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory, } from \"./factory\";\nexport const makeResponsiveBreakpointPropTypes = makePropTypesFactory(vars => ({\n    display: PropTypes.shape({\n        only: PropTypes.bool,\n        value: PropTypes.oneOf(vars.displays).isRequired,\n    }),\n    hide: PropTypes.shape({\n        only: PropTypes.bool,\n        value: PropTypes.bool.isRequired,\n    }),\n    textAlign: PropTypes.shape({\n        only: PropTypes.bool,\n        value: PropTypes.oneOf(vars.textAlignments).isRequired,\n    }),\n    textSize: PropTypes.shape({\n        only: PropTypes.bool,\n        value: PropTypes.oneOf(vars.textSizes).isRequired,\n    }),\n}));\nexport const makeResponsiveBreakpointLimitedPropTypes = makePropTypesFactory(vars => ({\n    display: PropTypes.shape({\n        value: PropTypes.oneOf(vars.displays).isRequired,\n    }),\n    hide: PropTypes.shape({\n        value: PropTypes.bool.isRequired,\n    }),\n    textAlign: PropTypes.shape({\n        value: PropTypes.oneOf(vars.textAlignments).isRequired,\n    }),\n    textSize: PropTypes.shape({\n        value: PropTypes.oneOf(vars.textSizes).isRequired,\n    }),\n}));\nexport const makePropTypes = makePropTypesFactory(vars => ({\n    responsive: PropTypes.shape(vars.breakpoints\n        .map(breakpoint => ({\n        [breakpoint]: PropTypes.shape(vars.breakpointsLimited.indexOf(breakpoint) === -1\n            ? makeResponsiveBreakpointPropTypes(vars)\n            : makeResponsiveBreakpointLimitedPropTypes(vars)),\n    }))\n        .reduce((acc, cv) => (Object.assign({}, acc, cv)), {})),\n}));\nexport const transform = props => {\n    const { className, responsive } = props, rest = tslib_1.__rest(props, [\"className\", \"responsive\"]);\n    return Object.assign({ className: classNames(responsive !== undefined\n            ? Object.keys(responsive)\n                .filter(breakpoint => responsive[breakpoint] !== undefined)\n                .map(breakpoint => {\n                const names = {};\n                const { display, hide, textAlign, textSize } = responsive[breakpoint];\n                if (display !== undefined) {\n                    const value = display.value;\n                    const only = \"only\" in display ? display.only === true : false;\n                    names[`is-${value}-${breakpoint}${only ? \"-only\" : \"\"}`] = value;\n                }\n                if (hide !== undefined) {\n                    const value = hide.value;\n                    const only = \"only\" in hide ? hide.only === true : false;\n                    names[`is-hidden-${breakpoint}${only ? \"-only\" : \"\"}`] = value;\n                }\n                if (textAlign !== undefined) {\n                    const value = textAlign.value;\n                    const only = \"only\" in textAlign ? textAlign.only === true : false;\n                    names[`has-text-${value}-${breakpoint}${only ? \"-only\" : \"\"}`] = value;\n                }\n                if (textSize !== undefined) {\n                    const value = textSize.value;\n                    const only = \"only\" in textSize ? textSize.only === true : false;\n                    names[`is-size-${value}-${breakpoint}${only ? \"-only\" : \"\"}`] = value;\n                }\n                return names;\n            })\n                .reduce((acc, cv) => (Object.assign({}, acc, cv)), {})\n            : undefined, className) }, rest);\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);\n//# sourceMappingURL=responsive.js.map"]},"metadata":{},"sourceType":"module"}