{"ast":null,"code":"import _classCallCheck from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { Generic } from \"../../base\";\nimport { initialValue, ModalContext } from \"./modal-context\";\nexport var ModalPortal = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ModalPortal, _React$PureComponent);\n\n  var _super = _createSuper(ModalPortal);\n\n  function ModalPortal() {\n    var _this;\n\n    _classCallCheck(this, ModalPortal);\n\n    _this = _super.apply(this, arguments);\n\n    _this.close = function () {\n      if (_this.props.onClose !== undefined) {\n        _this.props.onClose();\n      }\n    };\n\n    _this.handleKeydown = function (event) {\n      if (_this.props.closeOnEsc === true && event.code === \"Escape\") {\n        _this.close();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ModalPortal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          clipped = _this$props.clipped,\n          document = _this$props.document;\n      document.addEventListener(\"keydown\", this.handleKeydown);\n      var html = document.querySelector(\"html\");\n\n      if (html !== null) {\n        if (clipped === true) {\n          html.classList.add(\"is-clipped\");\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var document = this.props.document;\n      document.removeEventListener(\"keydown\", this.handleKeydown);\n      var html = document.querySelector(\"html\");\n\n      if (html !== null) {\n        html.classList.remove(\"is-clipped\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          className = _a.className,\n          closeOnBlur = _a.closeOnBlur,\n          closeOnEsc = _a.closeOnEsc,\n          innerRef = _a.innerRef,\n          onClose = _a.onClose,\n          rest = tslib_1.__rest(_a, [\"className\", \"closeOnBlur\", \"closeOnEsc\", \"innerRef\", \"onClose\"]);\n\n      return React.createElement(ModalContext.Provider, {\n        value: {\n          close: this.close,\n          closeOnBlur: closeOnBlur === true,\n          closeOnEsc: closeOnEsc === true\n        }\n      }, React.createElement(Generic, Object.assign({\n        className: classNames(\"modal\", \"is-active\", className),\n        ref: innerRef\n      }, rest)));\n    }\n  }]);\n\n  return ModalPortal;\n}(React.PureComponent);\nModalPortal.defaultProps = {\n  closeOnBlur: initialValue.closeOnBlur,\n  closeOnEsc: initialValue.closeOnEsc\n};\nModalPortal.displayName = \"Modal.Portal\";","map":{"version":3,"sources":["../../../src/components/modal/modal-portal.tsx"],"names":[],"mappings":";;;;;AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,OAAT,QAAwB,YAAxB;AACA,SAAS,YAAT,EAAuB,YAAvB,QAA8D,iBAA9D;AAeA,WAAa,WAAb;AAAA;;AAAA;;AAAA,yBAAA;AAAA;;AAAA;;;;AAwDmB,UAAA,KAAA,GAAQ,YAAK;AAC5B,UAAI,MAAK,KAAL,CAAW,OAAX,KAAuB,SAA3B,EAAsC;AACpC,cAAK,KAAL,CAAW,OAAX;AACD;AACF,KAJgB;;AAMA,UAAA,aAAA,GAAgB,UAAC,KAAD,EAAyB;AACxD,UAAI,MAAK,KAAL,CAAW,UAAX,KAA0B,IAA1B,IAAkC,KAAK,CAAC,IAAN,KAAe,QAArD,EAA+D;AAC7D,cAAK,KAAL;AACD;AACF,KAJgB;;AA9DnB;AAmEC;;AAnED;AAAA;AAAA,wCAO0B;AAAA,wBACQ,KAAK,KADb;AAAA,UACd,OADc,eACd,OADc;AAAA,UACL,QADK,eACL,QADK;AAEtB,MAAA,QAAQ,CAAC,gBAAT,CAA0B,SAA1B,EAAqC,KAAK,aAA1C;AACA,UAAM,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAb;;AAEA,UAAI,IAAI,KAAK,IAAb,EAAmB;AACjB,YAAI,OAAO,KAAK,IAAhB,EAAsB;AACpB,UAAA,IAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,YAAnB;AACD;AACF;AACF;AAjBH;AAAA;AAAA,2CAmB6B;AAAA,UACjB,QADiB,GACJ,KAAK,KADD,CACjB,QADiB;AAEzB,MAAA,QAAQ,CAAC,mBAAT,CAA6B,SAA7B,EAAwC,KAAK,aAA7C;AACA,UAAM,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAb;;AAEA,UAAI,IAAI,KAAK,IAAb,EAAmB;AACjB,QAAA,IAAI,CAAC,SAAL,CAAe,MAAf,CAAsB,YAAtB;AACD;AACF;AA3BH;AAAA;AAAA,6BA6Be;AACL,UAAA,EAAA,GAAA,KAAA,KAAA;AAAA,UACJ,SADI,GAKG,EALH,CACJ,SADI;AAAA,UAEJ,WAFI,GAKG,EALH,CAEJ,WAFI;AAAA,UAGJ,UAHI,GAKG,EALH,CAGJ,UAHI;AAAA,UAIJ,QAJI,GAKG,EALH,CAIJ,QAJI;AAAA,UAKJ,OALI,GAKG,EALH,CAKJ,OALI;AAAA,UAMJ,IANI,GAMJ,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,WAAA,EAAA,aAAA,EAAA,YAAA,EAAA,UAAA,EAAA,SAAA,CAAA,CANI;;AASN,aACE,KAAA,CAAA,aAAA,CAAC,YAAY,CAAC,QAAd,EAAsB;AACpB,QAAA,KAAK,EAAE;AACL,UAAA,KAAK,EAAE,KAAK,KADP;AAEL,UAAA,WAAW,EAAE,WAAW,KAAK,IAFxB;AAGL,UAAA,UAAU,EAAE,UAAU,KAAK;AAHtB;AADa,OAAtB,EAOE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,QAAA,SAAS,EAAE,UAAU,CAAC,OAAD,EAAU,WAAV,EAAuB,SAAvB,CADf;AAEN,QAAA,GAAG,EAAE;AAFC,OAAA,EAGF,IAHE,CAAR,CAPF,CADF;AAeD;AAtDH;;AAAA;AAAA,EAAiC,KAAK,CAAC,aAAvC;AACgB,WAAA,CAAA,YAAA,GAAe;AAC3B,EAAA,WAAW,EAAE,YAAY,CAAC,WADC;AAE3B,EAAA,UAAU,EAAE,YAAY,CAAC;AAFE,CAAf;AAIA,WAAA,CAAA,WAAA,GAAc,cAAd","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { Generic } from \"../../base\";\nimport { initialValue, ModalContext } from \"./modal-context\";\nexport class ModalPortal extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.close = () => {\n            if (this.props.onClose !== undefined) {\n                this.props.onClose();\n            }\n        };\n        this.handleKeydown = (event) => {\n            if (this.props.closeOnEsc === true && event.code === \"Escape\") {\n                this.close();\n            }\n        };\n    }\n    componentDidMount() {\n        const { clipped, document } = this.props;\n        document.addEventListener(\"keydown\", this.handleKeydown);\n        const html = document.querySelector(\"html\");\n        if (html !== null) {\n            if (clipped === true) {\n                html.classList.add(\"is-clipped\");\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { document } = this.props;\n        document.removeEventListener(\"keydown\", this.handleKeydown);\n        const html = document.querySelector(\"html\");\n        if (html !== null) {\n            html.classList.remove(\"is-clipped\");\n        }\n    }\n    render() {\n        const _a = this.props, { className, closeOnBlur, closeOnEsc, innerRef, onClose } = _a, rest = tslib_1.__rest(_a, [\"className\", \"closeOnBlur\", \"closeOnEsc\", \"innerRef\", \"onClose\"]);\n        return (React.createElement(ModalContext.Provider, { value: {\n                close: this.close,\n                closeOnBlur: closeOnBlur === true,\n                closeOnEsc: closeOnEsc === true,\n            } },\n            React.createElement(Generic, Object.assign({ className: classNames(\"modal\", \"is-active\", className), ref: innerRef }, rest))));\n    }\n}\nModalPortal.defaultProps = {\n    closeOnBlur: initialValue.closeOnBlur,\n    closeOnEsc: initialValue.closeOnEsc,\n};\nModalPortal.displayName = \"Modal.Portal\";\n//# sourceMappingURL=modal-portal.js.map"]},"metadata":{},"sourceType":"module"}