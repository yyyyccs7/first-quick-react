{"ast":null,"code":"import _defineProperty from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { ButtonGroup } from \"./button-group\";\nexport var BUTTON_DEFAULTS = {\n  sizes: [\"small\", \"normal\", \"medium\", \"large\"],\n  states: [\"hovered\", \"focused\", \"active\", \"loading\"]\n};\nvar propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fullwidth: PropTypes.bool,\n  inverted: PropTypes.bool,\n  outlined: PropTypes.bool,\n  rounded: PropTypes.bool,\n  selected: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  state: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  static: PropTypes.bool,\n  text: PropTypes.bool\n};\nexport var Button = Object.assign(forwardRefAs(function (_a, ref) {\n  var _classNames;\n\n  var className = _a.className,\n      color = _a.color,\n      fullwidth = _a.fullwidth,\n      inverted = _a.inverted,\n      outlined = _a.outlined,\n      rounded = _a.rounded,\n      selected = _a.selected,\n      size = _a.size,\n      state = _a.state,\n      isStatic = _a.static,\n      text = _a.text,\n      rest = tslib_1.__rest(_a, [\"className\", \"color\", \"fullwidth\", \"inverted\", \"outlined\", \"rounded\", \"selected\", \"size\", \"state\", \"static\", \"text\"]);\n\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"button\", (_classNames = {}, _defineProperty(_classNames, \"is-\".concat(color), color), _defineProperty(_classNames, \"is-fullwidth\", fullwidth), _defineProperty(_classNames, \"is-inverted\", inverted), _defineProperty(_classNames, \"is-outlined\", outlined), _defineProperty(_classNames, \"is-rounded\", rounded), _defineProperty(_classNames, \"is-selected\", selected), _defineProperty(_classNames, \"is-\".concat(size), size), _defineProperty(_classNames, \"is-\".concat(state), state), _defineProperty(_classNames, \"is-static\", isStatic), _defineProperty(_classNames, \"is-text\", text), _classNames), className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"button\"\n}), {\n  Group: ButtonGroup\n});\nButton.displayName = \"Button\";\nButton.propTypes = propTypes;","map":{"version":3,"sources":["../../../src/elements/button/button.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { ButtonGroup } from \"./button-group\";\nexport const BUTTON_DEFAULTS = {\n    sizes: [\"small\", \"normal\", \"medium\", \"large\"],\n    states: [\"hovered\", \"focused\", \"active\", \"loading\"],\n};\nconst propTypes = {\n    color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    fullwidth: PropTypes.bool,\n    inverted: PropTypes.bool,\n    outlined: PropTypes.bool,\n    rounded: PropTypes.bool,\n    selected: PropTypes.bool,\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    state: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    static: PropTypes.bool,\n    text: PropTypes.bool,\n};\nexport const Button = Object.assign(forwardRefAs((_a, ref) => {\n    var { className, color, fullwidth, inverted, outlined, rounded, selected, size, state, static: isStatic, text } = _a, rest = tslib_1.__rest(_a, [\"className\", \"color\", \"fullwidth\", \"inverted\", \"outlined\", \"rounded\", \"selected\", \"size\", \"state\", \"static\", \"text\"]);\n    return (React.createElement(Generic, Object.assign({ className: classNames(\"button\", {\n            [`is-${color}`]: color,\n            \"is-fullwidth\": fullwidth,\n            \"is-inverted\": inverted,\n            \"is-outlined\": outlined,\n            \"is-rounded\": rounded,\n            \"is-selected\": selected,\n            [`is-${size}`]: size,\n            [`is-${state}`]: state,\n            \"is-static\": isStatic,\n            \"is-text\": text,\n        }, className), ref: ref }, rest)));\n}, { as: \"button\" }), { Group: ButtonGroup });\nButton.displayName = \"Button\";\nButton.propTypes = propTypes;\n//# sourceMappingURL=button.js.map"]},"metadata":{},"sourceType":"module"}