{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { ModalContext } from \"./modal-context\";\n\nconst onClickHandler = (onClick, ctx) => event => {\n  if (onClick !== undefined) {\n    onClick(event);\n  }\n\n  ctx.close();\n};\n\nexport const ModalClose = forwardRefAs((_a, ref) => {\n  var {\n    className,\n    onClick\n  } = _a,\n      rest = tslib_1.__rest(_a, [\"className\", \"onClick\"]);\n\n  return React.createElement(ModalContext.Consumer, null, ctx => React.createElement(Generic, Object.assign({\n    \"aria-label\": \"close\",\n    className: classNames(\"modal-close\", \"is-large\", className),\n    onClick: onClickHandler(onClick, ctx),\n    ref: ref\n  }, rest)));\n}, {\n  as: \"button\"\n});\nModalClose.displayName = \"Modal.Close\";\nModalClose.propTypes = {\n  onClick: PropTypes.func\n};","map":{"version":3,"sources":["../../../src/components/modal/modal-close.tsx"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAEA,SAAS,YAAT,QAAgD,iBAAhD;;AAQA,MAAM,cAAc,GAAG,CACrB,OADqB,EAErB,GAFqB,KAGjB,KAAD,IAA4B;AAC/B,MAAI,OAAO,KAAK,SAAhB,EAA2B;AACzB,IAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AACD,EAAA,GAAG,CAAC,KAAJ;AACD,CARD;;AAUA,OAAO,MAAM,UAAU,GAAG,YAAY,CACpC,CAAC,EAAD,EAAkC,GAAlC,KAAyC;MAAxC;AAAE,IAAA,SAAF;AAAa,IAAA;AAAb,MAAoB,E;MAAE,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,WAAA,EAAA,SAAA,CAAA,C;;AAAmB,SACxC,KAAA,CAAA,aAAA,CAAC,YAAY,CAAC,QAAd,EAAsB,IAAtB,EACG,GAAG,IACF,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AAAA,kBACK,OADL;AAEN,IAAA,SAAS,EAAE,UAAU,CAAC,aAAD,EAAgB,UAAhB,EAA4B,SAA5B,CAFf;AAGN,IAAA,OAAO,EAAE,cAAc,CAAC,OAAD,EAAU,GAAV,CAHjB;AAIN,IAAA,GAAG,EAAE;AAJC,GAAA,EAKF,IALE,CAAR,CAFJ,CADwC;AAYzC,CAbmC,EAcpC;AAAE,EAAA,EAAE,EAAE;AAAN,CAdoC,CAA/B;AAiBP,UAAU,CAAC,WAAX,GAAyB,aAAzB;AACA,UAAU,CAAC,SAAX,GAAuB;AACrB,EAAA,OAAO,EAAE,SAAS,CAAC;AADE,CAAvB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { ModalContext } from \"./modal-context\";\nconst onClickHandler = (onClick, ctx) => (event) => {\n    if (onClick !== undefined) {\n        onClick(event);\n    }\n    ctx.close();\n};\nexport const ModalClose = forwardRefAs((_a, ref) => {\n    var { className, onClick } = _a, rest = tslib_1.__rest(_a, [\"className\", \"onClick\"]);\n    return (React.createElement(ModalContext.Consumer, null, ctx => (React.createElement(Generic, Object.assign({ \"aria-label\": \"close\", className: classNames(\"modal-close\", \"is-large\", className), onClick: onClickHandler(onClick, ctx), ref: ref }, rest)))));\n}, { as: \"button\" });\nModalClose.displayName = \"Modal.Close\";\nModalClose.propTypes = {\n    onClick: PropTypes.func,\n};\n//# sourceMappingURL=modal-close.js.map"]},"metadata":{},"sourceType":"module"}