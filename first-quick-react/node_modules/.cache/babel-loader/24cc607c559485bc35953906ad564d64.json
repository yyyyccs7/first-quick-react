{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nexport const MenuListItem = forwardRefAs((_a, ref) => {\n  var {\n    active,\n    className,\n    menu\n  } = _a,\n      rest = tslib_1.__rest(_a, [\"active\", \"className\", \"menu\"]);\n\n  return React.createElement(\"li\", null, React.createElement(Generic, Object.assign({\n    className: classNames({\n      \"is-active\": active\n    }, className),\n    ref: ref\n  }, rest)), menu);\n}, {\n  as: \"a\"\n});\nMenuListItem.displayName = \"Menu.List.Item\";\nMenuListItem.propTypes = {\n  active: PropTypes.bool,\n  menu: PropTypes.node\n};","map":{"version":3,"sources":["../../../src/components/menu/menu-list-item.tsx"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAUA,OAAO,MAAM,YAAY,GAAG,YAAY,CACtC,CAAC,EAAD,EAAuC,GAAvC,KAA8C;MAA7C;AAAE,IAAA,MAAF;AAAU,IAAA,SAAV;AAAqB,IAAA;AAArB,MAAyB,E;MAAE,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,QAAA,EAAA,WAAA,EAAA,MAAA,CAAA,C;;AAAmB,SAC7C,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,IAAA,SAAS,EAAE,UAAU,CAAC;AAAE,mBAAa;AAAf,KAAD,EAA0B,SAA1B,CADf;AAEN,IAAA,GAAG,EAAE;AAFC,GAAA,EAGF,IAHE,CAAR,CADF,EAMG,IANH,CAD6C;AAS9C,CAVqC,EAWtC;AAAE,EAAA,EAAE,EAAE;AAAN,CAXsC,CAAjC;AAcP,YAAY,CAAC,WAAb,GAA2B,gBAA3B;AACA,YAAY,CAAC,SAAb,GAAyB;AACvB,EAAA,MAAM,EAAE,SAAS,CAAC,IADK;AAEvB,EAAA,IAAI,EAAE,SAAS,CAAC;AAFO,CAAzB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nexport const MenuListItem = forwardRefAs((_a, ref) => {\n    var { active, className, menu } = _a, rest = tslib_1.__rest(_a, [\"active\", \"className\", \"menu\"]);\n    return (React.createElement(\"li\", null,\n        React.createElement(Generic, Object.assign({ className: classNames({ \"is-active\": active }, className), ref: ref }, rest)),\n        menu));\n}, { as: \"a\" });\nMenuListItem.displayName = \"Menu.List.Item\";\nMenuListItem.propTypes = {\n    active: PropTypes.bool,\n    menu: PropTypes.node,\n};\n//# sourceMappingURL=menu-list-item.js.map"]},"metadata":{},"sourceType":"module"}