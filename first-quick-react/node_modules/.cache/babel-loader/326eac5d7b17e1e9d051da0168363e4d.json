{"ast":null,"code":"import _defineProperty from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nexport var Divider = forwardRefAs(function (_a, ref) {\n  var _classNames;\n\n  var children = _a.children,\n      className = _a.className,\n      color = _a.color,\n      vertical = _a.vertical,\n      rest = tslib_1.__rest(_a, [\"children\", \"className\", \"color\", \"vertical\"]);\n\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"is-divider\", (_classNames = {}, _defineProperty(_classNames, \"is-\".concat(color), color), _defineProperty(_classNames, \"is-divider-vertical\", vertical), _classNames), className),\n    \"data-content\": children,\n    ref: ref\n  }, rest));\n}, {\n  as: \"div\",\n  children: \"\"\n});\nDivider.displayName = \"Divider\";\nDivider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  vertical: PropTypes.bool\n};","map":{"version":3,"sources":["../../../src/layout/divider/divider.tsx"],"names":[],"mappings":";;AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAYA,OAAO,IAAM,OAAO,GAAG,YAAY,CACjC,UAAC,EAAD,EAAoD,GAApD,EAA2D;AAAA;;AAAA,MAAxD,QAAwD,GAApB,EAAoB,CAAxD,QAAwD;AAAA,MAA9C,SAA8C,GAApB,EAAoB,CAA9C,SAA8C;AAAA,MAAnC,KAAmC,GAApB,EAAoB,CAAnC,KAAmC;AAAA,MAA5B,QAA4B,GAApB,EAAoB,CAA5B,QAA4B;AAAA,MAAlB,IAAkB,GAAlB,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,UAAA,EAAA,WAAA,EAAA,OAAA,EAAA,UAAA,CAAA,CAAkB;;AAAC,SAC1D,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,IAAA,SAAS,EAAE,UAAU,CACnB,YADmB,+DAGV,KAHU,GAGA,KAHA,gCAIhB,qBAJgB,EAIQ,QAJR,iBAMnB,SANmB,CADf;AAQL,oBACa,QATR;AAUN,IAAA,GAAG,EAAE;AAVC,GAAA,EAWF,IAXE,CAAR,CAD0D;AAc3D,CAfgC,EAgBjC;AACE,EAAA,EAAE,EAAE,KADN;AAEE,EAAA,QAAQ,EAAE;AAFZ,CAhBiC,CAA5B;AAsBP,OAAO,CAAC,WAAR,GAAsB,SAAtB;AACA,OAAO,CAAC,SAAR,GAAoB;AAClB,EAAA,QAAQ,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CADQ;AAElB,EAAA,KAAK,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CAFW;AAGlB,EAAA,QAAQ,EAAE,SAAS,CAAC;AAHF,CAApB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nexport const Divider = forwardRefAs((_a, ref) => {\n    var { children, className, color, vertical } = _a, rest = tslib_1.__rest(_a, [\"children\", \"className\", \"color\", \"vertical\"]);\n    return (React.createElement(Generic, Object.assign({ className: classNames(\"is-divider\", {\n            [`is-${color}`]: color,\n            [\"is-divider-vertical\"]: vertical,\n        }, className), \"data-content\": children, ref: ref }, rest)));\n}, {\n    as: \"div\",\n    children: \"\",\n});\nDivider.displayName = \"Divider\";\nDivider.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    vertical: PropTypes.bool,\n};\n//# sourceMappingURL=divider.js.map"]},"metadata":{},"sourceType":"module"}