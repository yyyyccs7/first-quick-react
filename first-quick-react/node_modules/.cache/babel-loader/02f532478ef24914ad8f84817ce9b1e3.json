{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n  clearfix: PropTypes.bool,\n  pull: PropTypes.oneOf(vars.floatPulledAlignments)\n}));\nexport const transform = props => {\n  const {\n    className,\n    clearfix,\n    pull\n  } = props,\n        rest = tslib_1.__rest(props, [\"className\", \"clearfix\", \"pull\"]);\n\n  return Object.assign({\n    className: classNames({\n      \"is-clearfix\": clearfix,\n      [`is-pulled-${pull}`]: pull\n    }, className)\n  }, rest);\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);","map":{"version":3,"sources":["../../../src/base/helpers/float.ts"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AAEA,SACE,oBADF,EAEE,8BAFF,QAIO,WAJP;AAeA,OAAO,MAAM,aAAa,GAAG,oBAAoB,CAAC,IAAI,KAAK;AACzD,EAAA,QAAQ,EAAE,SAAS,CAAC,IADqC;AAEzD,EAAA,IAAI,EAAE,SAAS,CAAC,KAAV,CAAgB,IAAI,CAAC,qBAArB;AAFmD,CAAL,CAAL,CAA1C;AAKP,OAAO,MAAM,SAAS,GAAyC,KAAK,IAAG;AACrE,QAAM;AAAE,IAAA,SAAF;AAAa,IAAA,QAAb;AAAuB,IAAA;AAAvB,MAAyC,KAA/C;AAAA,QAAmC,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,WAAA,EAAA,UAAA,EAAA,MAAA,CAAA,CAAnC;;AAEA,SAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,SAAS,EAAE,UAAU,CACnB;AACE,qBAAe,QADjB;AAEE,OAAC,aAAa,IAAI,EAAlB,GAAuB;AAFzB,KADmB,EAKnB,SALmB;AADvB,GAAA,EAQK,IARL,CAAA;AAUD,CAbM;AAeP,OAAO,MAAM,uBAAuB,GAAG,8BAA8B,CACnE,aADmE,EAEnE,SAFmE,CAA9D","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory, } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n    clearfix: PropTypes.bool,\n    pull: PropTypes.oneOf(vars.floatPulledAlignments),\n}));\nexport const transform = props => {\n    const { className, clearfix, pull } = props, rest = tslib_1.__rest(props, [\"className\", \"clearfix\", \"pull\"]);\n    return Object.assign({ className: classNames({\n            \"is-clearfix\": clearfix,\n            [`is-pulled-${pull}`]: pull,\n        }, className) }, rest);\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);\n//# sourceMappingURL=float.js.map"]},"metadata":{},"sourceType":"module"}