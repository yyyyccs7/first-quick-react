{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { NavbarItemContext } from \"./navbar-item-context\";\n\nvar handleOnClick = function handleOnClick(onClick, ctx) {\n  return function (event) {\n    if (onClick !== undefined) {\n      onClick(event);\n    }\n\n    ctx.setActive(!ctx.active);\n  };\n};\n\nexport var NavbarLink = forwardRefAs(function (_a, ref) {\n  var arrowless = _a.arrowless,\n      className = _a.className,\n      onClick = _a.onClick,\n      rest = tslib_1.__rest(_a, [\"arrowless\", \"className\", \"onClick\"]);\n\n  return React.createElement(NavbarItemContext.Consumer, null, function (ctx) {\n    return React.createElement(Generic, Object.assign({\n      className: classNames(\"navbar-link\", {\n        \"is-arrowless\": arrowless\n      }, className),\n      onClick: handleOnClick(onClick, ctx),\n      ref: ref\n    }, rest));\n  });\n}, {\n  as: \"span\"\n});\nNavbarLink.displayName = \"Navbar.Link\";\nNavbarLink.propTypes = {\n  arrowless: PropTypes.bool,\n  onClick: PropTypes.func\n};","map":{"version":3,"sources":["../../../src/components/navbar/navbar-link.tsx"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAEA,SACE,iBADF,QAGO,uBAHP;;AAYA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CACpB,OADoB,EAEpB,GAFoB;AAAA,SAGjB,UAAC,KAAD,EAA4B;AAC/B,QAAI,OAAO,KAAK,SAAhB,EAA2B;AACzB,MAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AACD,IAAA,GAAG,CAAC,SAAJ,CAAc,CAAC,GAAG,CAAC,MAAnB;AACD,GARqB;AAAA,CAAtB;;AAUA,OAAO,IAAM,UAAU,GAAG,YAAY,CACpC,UAAC,EAAD,EAA6C,GAA7C,EAAoD;AAAA,MAAjD,SAAiD,GAApB,EAAoB,CAAjD,SAAiD;AAAA,MAAtC,SAAsC,GAApB,EAAoB,CAAtC,SAAsC;AAAA,MAA3B,OAA2B,GAApB,EAAoB,CAA3B,OAA2B;AAAA,MAAlB,IAAkB,GAAlB,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,WAAA,EAAA,WAAA,EAAA,SAAA,CAAA,CAAkB;;AAAC,SACnD,KAAA,CAAA,aAAA,CAAC,iBAAiB,CAAC,QAAnB,EAA2B,IAA3B,EACG,UAAA,GAAG;AAAA,WACF,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,MAAA,SAAS,EAAE,UAAU,CACnB,aADmB,EAEnB;AAAE,wBAAgB;AAAlB,OAFmB,EAGnB,SAHmB,CADf;AAMN,MAAA,OAAO,EAAE,aAAa,CAAC,OAAD,EAAU,GAAV,CANhB;AAON,MAAA,GAAG,EAAE;AAPC,KAAA,EAQF,IARE,CAAR,CADE;AAAA,GADN,CADmD;AAepD,CAhBmC,EAiBpC;AAAE,EAAA,EAAE,EAAE;AAAN,CAjBoC,CAA/B;AAoBP,UAAU,CAAC,WAAX,GAAyB,aAAzB;AACA,UAAU,CAAC,SAAX,GAAuB;AACrB,EAAA,SAAS,EAAE,SAAS,CAAC,IADA;AAErB,EAAA,OAAO,EAAE,SAAS,CAAC;AAFE,CAAvB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { NavbarItemContext, } from \"./navbar-item-context\";\nconst handleOnClick = (onClick, ctx) => (event) => {\n    if (onClick !== undefined) {\n        onClick(event);\n    }\n    ctx.setActive(!ctx.active);\n};\nexport const NavbarLink = forwardRefAs((_a, ref) => {\n    var { arrowless, className, onClick } = _a, rest = tslib_1.__rest(_a, [\"arrowless\", \"className\", \"onClick\"]);\n    return (React.createElement(NavbarItemContext.Consumer, null, ctx => (React.createElement(Generic, Object.assign({ className: classNames(\"navbar-link\", { \"is-arrowless\": arrowless }, className), onClick: handleOnClick(onClick, ctx), ref: ref }, rest)))));\n}, { as: \"span\" });\nNavbarLink.displayName = \"Navbar.Link\";\nNavbarLink.propTypes = {\n    arrowless: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n//# sourceMappingURL=navbar-link.js.map"]},"metadata":{},"sourceType":"module"}