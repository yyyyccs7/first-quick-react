{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nexport const TILE_DEFAULTS = {\n  kinds: [\"ancestor\", \"parent\", \"child\"],\n  sizes: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n};\nexport const Tile = forwardRefAs((_a, ref) => {\n  var {\n    className,\n    kind,\n    size,\n    vertical\n  } = _a,\n      rest = tslib_1.__rest(_a, [\"className\", \"kind\", \"size\", \"vertical\"]);\n\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"tile\", {\n      [`is-${kind}`]: kind,\n      [`is-${size}`]: size !== undefined,\n      \"is-vertical\": vertical\n    }, className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"div\"\n});\nTile.displayName = \"Tile\";\nTile.propTypes = {\n  kind: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  vertical: PropTypes.bool\n};","map":{"version":3,"sources":["../../../src/grid/tiles/tile.tsx"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAIA,OAAO,MAAM,aAAa,GAAG;AAC3B,EAAA,KAAK,EAAE,CAAC,UAAD,EAAa,QAAb,EAAuB,OAAvB,CADoB;AAE3B,EAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC;AAFoB,CAAtB;AAyBP,OAAO,MAAM,IAAI,GAAG,YAAY,CAC9B,CAAC,EAAD,EAA+C,GAA/C,KAAsD;MAArD;AAAE,IAAA,SAAF;AAAa,IAAA,IAAb;AAAmB,IAAA,IAAnB;AAAyB,IAAA;AAAzB,MAAiC,E;MAAE,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,WAAA,EAAA,MAAA,EAAA,MAAA,EAAA,UAAA,CAAA,C;;AAAmB,SACrD,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,IAAA,SAAS,EAAE,UAAU,CACnB,MADmB,EAEnB;AACE,OAAC,MAAM,IAAI,EAAX,GAAgB,IADlB;AAEE,OAAC,MAAM,IAAI,EAAX,GAAgB,IAAI,KAAK,SAF3B;AAGE,qBAAe;AAHjB,KAFmB,EAOnB,SAPmB,CADf;AAUN,IAAA,GAAG,EAAE;AAVC,GAAA,EAWF,IAXE,CAAR,CADqD;AActD,CAf6B,EAgB9B;AAAE,EAAA,EAAE,EAAE;AAAN,CAhB8B,CAAzB;AAmBP,IAAI,CAAC,WAAL,GAAmB,MAAnB;AACA,IAAI,CAAC,SAAL,GAAiB;AACf,EAAA,IAAI,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CADS;AAEf,EAAA,IAAI,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CAFS;AAGf,EAAA,QAAQ,EAAE,SAAS,CAAC;AAHL,CAAjB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nexport const TILE_DEFAULTS = {\n    kinds: [\"ancestor\", \"parent\", \"child\"],\n    sizes: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n};\nexport const Tile = forwardRefAs((_a, ref) => {\n    var { className, kind, size, vertical } = _a, rest = tslib_1.__rest(_a, [\"className\", \"kind\", \"size\", \"vertical\"]);\n    return (React.createElement(Generic, Object.assign({ className: classNames(\"tile\", {\n            [`is-${kind}`]: kind,\n            [`is-${size}`]: size !== undefined,\n            \"is-vertical\": vertical,\n        }, className), ref: ref }, rest)));\n}, { as: \"div\" });\nTile.displayName = \"Tile\";\nTile.propTypes = {\n    kind: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    vertical: PropTypes.bool,\n};\n//# sourceMappingURL=tile.js.map"]},"metadata":{},"sourceType":"module"}