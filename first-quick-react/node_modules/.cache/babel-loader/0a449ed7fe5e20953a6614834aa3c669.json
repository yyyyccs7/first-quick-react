{"ast":null,"code":"import _defineProperty from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { Generic } from \"../../base\";\nimport { combineRefs } from \"../../utils\";\nimport { DropdownContext } from \"./dropdown-context\";\nexport var DROPDOWN_DEFAULTS = {\n  alignments: [\"right\"]\n};\nvar initialState = {\n  active: false\n};\nexport var DropdownContainer = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(DropdownContainer, _React$PureComponent);\n\n  var _super = _createSuper(DropdownContainer);\n\n  function DropdownContainer(props) {\n    var _this;\n\n    _classCallCheck(this, DropdownContainer);\n\n    _this = _super.call(this, props);\n    _this.ref = React.createRef();\n\n    _this.handleClick = function (event) {\n      if (_this.props.managed !== true && _this.active && _this.ref.current !== null) {\n        if (event.target instanceof Element && !_this.ref.current.contains(event.target)) {\n          _this.active = false;\n        }\n      }\n    };\n\n    _this.state = {\n      active: props.active === true\n    };\n    return _this;\n  }\n\n  _createClass(DropdownContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener(\"click\", this.handleClick);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"click\", this.handleClick);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _classNames;\n\n      var _a = this.props,\n          active = _a.active,\n          align = _a.align,\n          className = _a.className,\n          hoverable = _a.hoverable,\n          innerRef = _a.innerRef,\n          managed = _a.managed,\n          up = _a.up,\n          rest = tslib_1.__rest(_a, [\"active\", \"align\", \"className\", \"hoverable\", \"innerRef\", \"managed\", \"up\"]);\n\n      return React.createElement(DropdownContext.Provider, {\n        value: {\n          active: this.active,\n          setActive: function setActive(value) {\n            return _this2.active = value;\n          }\n        }\n      }, React.createElement(Generic, Object.assign({\n        className: classNames(\"dropdown\", (_classNames = {}, _defineProperty(_classNames, \"is-\".concat(align), align), _defineProperty(_classNames, \"is-active\", this.active), _defineProperty(_classNames, \"is-hoverable\", hoverable), _defineProperty(_classNames, \"is-up\", up), _classNames), className),\n        ref: combineRefs(this.ref, innerRef)\n      }, rest)));\n    }\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this.props.managed === true ? this.props.active === true : this.state.active;\n    },\n    set: function set(value) {\n      if (this.props.managed !== true) {\n        this.setState({\n          active: value\n        });\n      }\n    }\n  }]);\n\n  return DropdownContainer;\n}(React.PureComponent);\nDropdownContainer.displayName = \"Dropdown.Container\";","map":{"version":3,"sources":["../../../src/components/dropdown/dropdown-container.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { Generic } from \"../../base\";\nimport { combineRefs } from \"../../utils\";\nimport { DropdownContext } from \"./dropdown-context\";\nexport const DROPDOWN_DEFAULTS = {\n    alignments: [\"right\"],\n};\nconst initialState = {\n    active: false,\n};\nexport class DropdownContainer extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.handleClick = (event) => {\n            if (this.props.managed !== true &&\n                this.active &&\n                this.ref.current !== null) {\n                if (event.target instanceof Element &&\n                    !this.ref.current.contains(event.target)) {\n                    this.active = false;\n                }\n            }\n        };\n        this.state = { active: props.active === true };\n    }\n    componentDidMount() {\n        document.addEventListener(\"click\", this.handleClick);\n    }\n    componentWillUnmount() {\n        document.removeEventListener(\"click\", this.handleClick);\n    }\n    render() {\n        const _a = this.props, { active, align, className, hoverable, innerRef, managed, up } = _a, rest = tslib_1.__rest(_a, [\"active\", \"align\", \"className\", \"hoverable\", \"innerRef\", \"managed\", \"up\"]);\n        return (React.createElement(DropdownContext.Provider, { value: {\n                active: this.active,\n                setActive: (value) => (this.active = value),\n            } },\n            React.createElement(Generic, Object.assign({ className: classNames(\"dropdown\", {\n                    [`is-${align}`]: align,\n                    \"is-active\": this.active,\n                    \"is-hoverable\": hoverable,\n                    \"is-up\": up,\n                }, className), ref: combineRefs(this.ref, innerRef) }, rest))));\n    }\n    get active() {\n        return this.props.managed === true\n            ? this.props.active === true\n            : this.state.active;\n    }\n    set active(value) {\n        if (this.props.managed !== true) {\n            this.setState({ active: value });\n        }\n    }\n}\nDropdownContainer.displayName = \"Dropdown.Container\";\n//# sourceMappingURL=dropdown-container.js.map"]},"metadata":{},"sourceType":"module"}