{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { DropdownContext } from \"./dropdown-context\";\n\nvar onClickHandler = function onClickHandler(onClick, ctx) {\n  return function (event) {\n    if (onClick !== undefined) {\n      onClick(event);\n    }\n\n    ctx.setActive(false);\n  };\n};\n\nexport var DropdownItem = forwardRefAs(function (_a, ref) {\n  var active = _a.active,\n      className = _a.className,\n      onClick = _a.onClick,\n      rest = tslib_1.__rest(_a, [\"active\", \"className\", \"onClick\"]);\n\n  return React.createElement(DropdownContext.Consumer, null, function (ctx) {\n    return React.createElement(Generic, Object.assign({\n      className: classNames(\"dropdown-item\", {\n        \"is-active\": active\n      }, className),\n      onClick: onClickHandler(onClick, ctx),\n      ref: ref\n    }, rest));\n  });\n}, {\n  as: \"a\"\n});\nDropdownItem.displayName = \"Dropdown.Item\";\nDropdownItem.propTypes = {\n  active: PropTypes.bool,\n  onClick: PropTypes.func\n};","map":{"version":3,"sources":["../../../src/components/dropdown/dropdown-item.tsx"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAEA,SAAS,eAAT,QAAsD,oBAAtD;;AASA,IAAM,cAAc,GAAG,SAAjB,cAAiB,CACrB,OADqB,EAErB,GAFqB;AAAA,SAGlB,UAAC,KAAD,EAA4B;AAC/B,QAAI,OAAO,KAAK,SAAhB,EAA2B;AACzB,MAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AACD,IAAA,GAAG,CAAC,SAAJ,CAAc,KAAd;AACD,GARsB;AAAA,CAAvB;;AAUA,OAAO,IAAM,YAAY,GAAG,YAAY,CACtC,UAAC,EAAD,EAA0C,GAA1C,EAAiD;AAAA,MAA9C,MAA8C,GAApB,EAAoB,CAA9C,MAA8C;AAAA,MAAtC,SAAsC,GAApB,EAAoB,CAAtC,SAAsC;AAAA,MAA3B,OAA2B,GAApB,EAAoB,CAA3B,OAA2B;AAAA,MAAlB,IAAkB,GAAlB,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,QAAA,EAAA,WAAA,EAAA,SAAA,CAAA,CAAkB;;AAAC,SAChD,KAAA,CAAA,aAAA,CAAC,eAAe,CAAC,QAAjB,EAAyB,IAAzB,EACG,UAAA,GAAG;AAAA,WACF,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,MAAA,SAAS,EAAE,UAAU,CACnB,eADmB,EAEnB;AAAE,qBAAa;AAAf,OAFmB,EAGnB,SAHmB,CADf;AAMN,MAAA,OAAO,EAAE,cAAc,CAAC,OAAD,EAAU,GAAV,CANjB;AAON,MAAA,GAAG,EAAE;AAPC,KAAA,EAQF,IARE,CAAR,CADE;AAAA,GADN,CADgD;AAejD,CAhBqC,EAiBtC;AAAE,EAAA,EAAE,EAAE;AAAN,CAjBsC,CAAjC;AAoBP,YAAY,CAAC,WAAb,GAA2B,eAA3B;AACA,YAAY,CAAC,SAAb,GAAyB;AACvB,EAAA,MAAM,EAAE,SAAS,CAAC,IADK;AAEvB,EAAA,OAAO,EAAE,SAAS,CAAC;AAFI,CAAzB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { DropdownContext } from \"./dropdown-context\";\nconst onClickHandler = (onClick, ctx) => (event) => {\n    if (onClick !== undefined) {\n        onClick(event);\n    }\n    ctx.setActive(false);\n};\nexport const DropdownItem = forwardRefAs((_a, ref) => {\n    var { active, className, onClick } = _a, rest = tslib_1.__rest(_a, [\"active\", \"className\", \"onClick\"]);\n    return (React.createElement(DropdownContext.Consumer, null, ctx => (React.createElement(Generic, Object.assign({ className: classNames(\"dropdown-item\", { \"is-active\": active }, className), onClick: onClickHandler(onClick, ctx), ref: ref }, rest)))));\n}, { as: \"a\" });\nDropdownItem.displayName = \"Dropdown.Item\";\nDropdownItem.propTypes = {\n    active: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n//# sourceMappingURL=dropdown-item.js.map"]},"metadata":{},"sourceType":"module"}