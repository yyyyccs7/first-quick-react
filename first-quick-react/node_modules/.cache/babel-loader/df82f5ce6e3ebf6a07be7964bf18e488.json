{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { DEFAULTS } from \"../../base/helpers/variables\";\nimport { ColumnGroup } from \"./column-group\";\nexport const COLUMN_DEFAULTS = {\n  sizes: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, \"one-third\", \"two-thirds\", \"one-quarter\", \"half\", \"three-quarters\", \"one-fifth\", \"two-fifths\", \"three-fifths\", \"four-fifths\", \"full\"]\n};\nexport const Column = Object.assign(forwardRefAs((_a, ref) => {\n  var {\n    className,\n    mobile,\n    tablet,\n    desktop,\n    widescreen,\n    fullhd,\n    touch,\n    narrow,\n    offset,\n    size\n  } = _a,\n      rest = tslib_1.__rest(_a, [\"className\", \"mobile\", \"tablet\", \"desktop\", \"widescreen\", \"fullhd\", \"touch\", \"narrow\", \"offset\", \"size\"]);\n\n  const breakpoints = {\n    desktop,\n    fullhd,\n    mobile,\n    tablet,\n    touch,\n    widescreen\n  };\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"column\", {\n      [`is-${size}`]: size !== undefined,\n      [`is-offset-${offset}`]: offset !== undefined,\n      \"is-narrow\": narrow\n    }, Object.keys(breakpoints).map(breakpoint => {\n      const value = breakpoints[breakpoint];\n      return value === undefined ? {} : {\n        [`is-${value.size}-${breakpoint}`]: value.size !== undefined,\n        [`is-narrow-${breakpoint}`]: value.narrow,\n        [`is-offset-${value.offset}-${breakpoint}`]: value.offset !== undefined\n      };\n    }).reduce((acc, cv) => Object.assign({}, acc, cv), {}), className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"div\"\n}), {\n  Group: ColumnGroup\n});\nColumn.displayName = \"Column\";\nconst ColumnSizeModifierPropTypes = {\n  narrow: PropTypes.bool,\n  offset: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nColumn.propTypes = Object.assign({}, DEFAULTS.breakpoints.map(breakpoint => ({\n  [breakpoint]: PropTypes.shape(ColumnSizeModifierPropTypes)\n})).reduce((acc, cv) => Object.assign({}, acc, cv), {}), ColumnSizeModifierPropTypes);","map":{"version":3,"sources":["../../../src/grid/columns/column.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { DEFAULTS } from \"../../base/helpers/variables\";\nimport { ColumnGroup } from \"./column-group\";\nexport const COLUMN_DEFAULTS = {\n    sizes: [\n        0,\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        \"one-third\",\n        \"two-thirds\",\n        \"one-quarter\",\n        \"half\",\n        \"three-quarters\",\n        \"one-fifth\",\n        \"two-fifths\",\n        \"three-fifths\",\n        \"four-fifths\",\n        \"full\",\n    ],\n};\nexport const Column = Object.assign(forwardRefAs((_a, ref) => {\n    var { className, mobile, tablet, desktop, widescreen, fullhd, touch, narrow, offset, size } = _a, rest = tslib_1.__rest(_a, [\"className\", \"mobile\", \"tablet\", \"desktop\", \"widescreen\", \"fullhd\", \"touch\", \"narrow\", \"offset\", \"size\"]);\n    const breakpoints = {\n        desktop,\n        fullhd,\n        mobile,\n        tablet,\n        touch,\n        widescreen,\n    };\n    return (React.createElement(Generic, Object.assign({ className: classNames(\"column\", {\n            [`is-${size}`]: size !== undefined,\n            [`is-offset-${offset}`]: offset !== undefined,\n            \"is-narrow\": narrow,\n        }, Object.keys(breakpoints)\n            .map(breakpoint => {\n            const value = breakpoints[breakpoint];\n            return value === undefined\n                ? {}\n                : {\n                    [`is-${value.size}-${breakpoint}`]: value.size !== undefined,\n                    [`is-narrow-${breakpoint}`]: value.narrow,\n                    [`is-offset-${value.offset}-${breakpoint}`]: value.offset !== undefined,\n                };\n        })\n            .reduce((acc, cv) => (Object.assign({}, acc, cv)), {}), className), ref: ref }, rest)));\n}, { as: \"div\" }), { Group: ColumnGroup });\nColumn.displayName = \"Column\";\nconst ColumnSizeModifierPropTypes = {\n    narrow: PropTypes.bool,\n    offset: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\nColumn.propTypes = Object.assign({}, DEFAULTS.breakpoints\n    .map(breakpoint => ({\n    [breakpoint]: PropTypes.shape(ColumnSizeModifierPropTypes),\n}))\n    .reduce((acc, cv) => (Object.assign({}, acc, cv)), {}), ColumnSizeModifierPropTypes);\n//# sourceMappingURL=column.js.map"]},"metadata":{},"sourceType":"module"}