{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n  marginless: PropTypes.bool,\n  paddingless: PropTypes.bool,\n  radiusless: PropTypes.bool,\n  relative: PropTypes.bool,\n  shadowless: PropTypes.bool,\n  unselectable: PropTypes.bool\n}));\nexport const transform = props => {\n  const {\n    className,\n    marginless,\n    paddingless,\n    radiusless,\n    relative,\n    shadowless,\n    unselectable\n  } = props,\n        rest = tslib_1.__rest(props, [\"className\", \"marginless\", \"paddingless\", \"radiusless\", \"relative\", \"shadowless\", \"unselectable\"]);\n\n  return Object.assign({\n    className: classNames({\n      \"is-marginless\": marginless,\n      \"is-paddingless\": paddingless,\n      \"is-radiusless\": radiusless,\n      \"is-relative\": relative,\n      \"is-shadowless\": shadowless,\n      \"is-unselectable\": unselectable\n    }, className)\n  }, rest);\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);","map":{"version":3,"sources":["../../../src/base/helpers/other.ts"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AAEA,SACE,oBADF,EAEE,8BAFF,QAIO,WAJP;AAsBA,OAAO,MAAM,aAAa,GAAG,oBAAoB,CAAC,IAAI,KAAK;AACzD,EAAA,UAAU,EAAE,SAAS,CAAC,IADmC;AAEzD,EAAA,WAAW,EAAE,SAAS,CAAC,IAFkC;AAGzD,EAAA,UAAU,EAAE,SAAS,CAAC,IAHmC;AAIzD,EAAA,QAAQ,EAAE,SAAS,CAAC,IAJqC;AAKzD,EAAA,UAAU,EAAE,SAAS,CAAC,IALmC;AAMzD,EAAA,YAAY,EAAE,SAAS,CAAC;AANiC,CAAL,CAAL,CAA1C;AASP,OAAO,MAAM,SAAS,GAAyC,KAAK,IAAG;AACrE,QAAM;AACJ,IAAA,SADI;AAEJ,IAAA,UAFI;AAGJ,IAAA,WAHI;AAIJ,IAAA,UAJI;AAKJ,IAAA,QALI;AAMJ,IAAA,UANI;AAOJ,IAAA;AAPI,MASF,KATJ;AAAA,QAQE,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,WAAA,EAAA,YAAA,EAAA,aAAA,EAAA,YAAA,EAAA,UAAA,EAAA,YAAA,EAAA,cAAA,CAAA,CARF;;AAWA,SAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,SAAS,EAAE,UAAU,CACnB;AACE,uBAAiB,UADnB;AAEE,wBAAkB,WAFpB;AAGE,uBAAiB,UAHnB;AAIE,qBAAe,QAJjB;AAKE,uBAAiB,UALnB;AAME,yBAAmB;AANrB,KADmB,EASnB,SATmB;AADvB,GAAA,EAYK,IAZL,CAAA;AAcD,CA1BM;AA4BP,OAAO,MAAM,uBAAuB,GAAG,8BAA8B,CACnE,aADmE,EAEnE,SAFmE,CAA9D","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory, } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n    marginless: PropTypes.bool,\n    paddingless: PropTypes.bool,\n    radiusless: PropTypes.bool,\n    relative: PropTypes.bool,\n    shadowless: PropTypes.bool,\n    unselectable: PropTypes.bool,\n}));\nexport const transform = props => {\n    const { className, marginless, paddingless, radiusless, relative, shadowless, unselectable } = props, rest = tslib_1.__rest(props, [\"className\", \"marginless\", \"paddingless\", \"radiusless\", \"relative\", \"shadowless\", \"unselectable\"]);\n    return Object.assign({ className: classNames({\n            \"is-marginless\": marginless,\n            \"is-paddingless\": paddingless,\n            \"is-radiusless\": radiusless,\n            \"is-relative\": relative,\n            \"is-shadowless\": shadowless,\n            \"is-unselectable\": unselectable,\n        }, className) }, rest);\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);\n//# sourceMappingURL=other.js.map"]},"metadata":{},"sourceType":"module"}