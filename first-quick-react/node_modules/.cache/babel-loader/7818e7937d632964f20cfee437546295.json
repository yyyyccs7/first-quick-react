{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nexport const CONTROL_DEFAULTS = {\n  sizes: [\"small\", \"medium\", \"large\"]\n};\nexport const Control = forwardRefAs((_a, ref) => {\n  var {\n    className,\n    expanded,\n    iconLeft,\n    iconRight,\n    loading,\n    size\n  } = _a,\n      rest = tslib_1.__rest(_a, [\"className\", \"expanded\", \"iconLeft\", \"iconRight\", \"loading\", \"size\"]);\n\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"control\", {\n      \"has-icons-left\": iconLeft,\n      \"has-icons-right\": iconRight,\n      \"is-expanded\": expanded,\n      \"is-loading\": loading,\n      [`is-${size}`]: size\n    }, className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"div\"\n});\nControl.displayName = \"Control\";\nControl.propTypes = {\n  expanded: PropTypes.bool,\n  iconLeft: PropTypes.bool,\n  iconRight: PropTypes.bool,\n  loading: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};","map":{"version":3,"sources":["../../../src/elements/form/control.tsx"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAIA,OAAO,MAAM,gBAAgB,GAAG;AAC9B,EAAA,KAAK,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB;AADuB,CAAzB;AAyBP,OAAO,MAAM,OAAO,GAAG,YAAY,CACjC,CACE,EADF,EAEE,GAFF,KAGI;MAFF;AAAE,IAAA,SAAF;AAAa,IAAA,QAAb;AAAuB,IAAA,QAAvB;AAAiC,IAAA,SAAjC;AAA4C,IAAA,OAA5C;AAAqD,IAAA;AAArD,MAAyD,E;MAAE,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,WAAA,EAAA,UAAA,EAAA,UAAA,EAAA,WAAA,EAAA,SAAA,EAAA,MAAA,CAAA,C;;AAExD,SACH,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,IAAA,SAAS,EAAE,UAAU,CACnB,SADmB,EAEnB;AACE,wBAAkB,QADpB;AAEE,yBAAmB,SAFrB;AAGE,qBAAe,QAHjB;AAIE,oBAAc,OAJhB;AAKE,OAAC,MAAM,IAAI,EAAX,GAAgB;AALlB,KAFmB,EASnB,SATmB,CADf;AAYN,IAAA,GAAG,EAAE;AAZC,GAAA,EAaF,IAbE,CAAR,CADG;AAgBJ,CApBgC,EAqBjC;AAAE,EAAA,EAAE,EAAE;AAAN,CArBiC,CAA5B;AAwBP,OAAO,CAAC,WAAR,GAAsB,SAAtB;AACA,OAAO,CAAC,SAAR,GAAoB;AAClB,EAAA,QAAQ,EAAE,SAAS,CAAC,IADF;AAElB,EAAA,QAAQ,EAAE,SAAS,CAAC,IAFF;AAGlB,EAAA,SAAS,EAAE,SAAS,CAAC,IAHH;AAIlB,EAAA,OAAO,EAAE,SAAS,CAAC,IAJD;AAKlB,EAAA,IAAI,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB;AALY,CAApB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nexport const CONTROL_DEFAULTS = {\n    sizes: [\"small\", \"medium\", \"large\"],\n};\nexport const Control = forwardRefAs((_a, ref) => {\n    var { className, expanded, iconLeft, iconRight, loading, size } = _a, rest = tslib_1.__rest(_a, [\"className\", \"expanded\", \"iconLeft\", \"iconRight\", \"loading\", \"size\"]);\n    return (React.createElement(Generic, Object.assign({ className: classNames(\"control\", {\n            \"has-icons-left\": iconLeft,\n            \"has-icons-right\": iconRight,\n            \"is-expanded\": expanded,\n            \"is-loading\": loading,\n            [`is-${size}`]: size,\n        }, className), ref: ref }, rest)));\n}, { as: \"div\" });\nControl.displayName = \"Control\";\nControl.propTypes = {\n    expanded: PropTypes.bool,\n    iconLeft: PropTypes.bool,\n    iconRight: PropTypes.bool,\n    loading: PropTypes.bool,\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n//# sourceMappingURL=control.js.map"]},"metadata":{},"sourceType":"module"}