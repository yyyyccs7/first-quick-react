{"ast":null,"code":"import _classCallCheck from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/yuzhuping/Desktop/first-quick-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { Generic } from \"../../base\";\nimport { combineRefs } from \"../../utils\";\nimport { NavbarItemContext } from \"./navbar-item-context\";\nexport var NavbarItemContainer = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(NavbarItemContainer, _React$PureComponent);\n\n  var _super = _createSuper(NavbarItemContainer);\n\n  function NavbarItemContainer(props) {\n    var _this;\n\n    _classCallCheck(this, NavbarItemContainer);\n\n    _this = _super.call(this, props);\n    _this.ref = React.createRef();\n\n    _this.handleDocumentClick = function (event) {\n      if (_this.props.managed !== true && _this.active && _this.ref.current !== null) {\n        if (event.target instanceof Element && !_this.ref.current.contains(event.target)) {\n          _this.active = false;\n        }\n      }\n    };\n\n    _this.handleOnClick = function (ctx) {\n      return function (event) {\n        if (_this.props.onClick !== undefined) {\n          _this.props.onClick(event);\n        }\n\n        ctx.setActive(!ctx.active);\n      };\n    };\n\n    _this.state = {\n      active: props.active === true\n    };\n    return _this;\n  }\n\n  _createClass(NavbarItemContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.dropdown === true) {\n        document.addEventListener(\"click\", this.handleDocumentClick);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"click\", this.handleDocumentClick);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _a = this.props,\n          as = _a.as,\n          active = _a.active,\n          initialClassName = _a.className,\n          dropdown = _a.dropdown,\n          expanded = _a.expanded,\n          hoverable = _a.hoverable,\n          innerRef = _a.innerRef,\n          managed = _a.managed,\n          onClick = _a.onClick,\n          tab = _a.tab,\n          up = _a.up,\n          rest = tslib_1.__rest(_a, [\"as\", \"active\", \"className\", \"dropdown\", \"expanded\", \"hoverable\", \"innerRef\", \"managed\", \"onClick\", \"tab\", \"up\"]);\n\n      var className = classNames(\"navbar-item\", {\n        \"has-dropdown\": dropdown,\n        \"has-dropdown-up\": up,\n        \"is-active\": this.active,\n        \"is-expanded\": expanded,\n        \"is-hoverable\": hoverable,\n        \"is-tab\": tab\n      }, initialClassName);\n      var ref = combineRefs(this.ref, innerRef);\n\n      if (dropdown === true) {\n        var asOverride = as === \"a\" ? \"div\" : as;\n        return React.createElement(NavbarItemContext.Provider, {\n          value: {\n            active: this.active,\n            setActive: function setActive(value) {\n              return _this2.active = value;\n            }\n          }\n        }, React.createElement(Generic, Object.assign({\n          as: asOverride,\n          className: className,\n          ref: ref\n        }, rest)));\n      }\n\n      return React.createElement(NavbarItemContext.Consumer, null, function (ctx) {\n        return React.createElement(Generic, Object.assign({\n          as: as,\n          className: className,\n          onClick: _this2.handleOnClick(ctx),\n          ref: ref\n        }, rest));\n      });\n    }\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this.props.managed === true ? this.props.active === true : this.state.active;\n    },\n    set: function set(value) {\n      if (this.props.managed !== true) {\n        this.setState({\n          active: value\n        });\n      }\n    }\n  }]);\n\n  return NavbarItemContainer;\n}(React.PureComponent);\nNavbarItemContainer.displayName = \"Navbar.Item.Container\";","map":{"version":3,"sources":["../../../src/components/navbar/navbar-item-container.tsx"],"names":[],"mappings":";;;;;AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,OAAT,QAAwB,YAAxB;AAEA,SAAS,WAAT,QAA4B,aAA5B;AACA,SACE,iBADF,QAGO,uBAHP;AAyBA,WAAa,mBAAb;AAAA;;AAAA;;AAQE,+BAAY,KAAZ,EAA2C;AAAA;;AAAA;;AACzC,8BAAM,KAAN;AAHe,UAAA,GAAA,GAAM,KAAK,CAAC,SAAN,EAAN;;AA0FA,UAAA,mBAAA,GAAsB,UAAC,KAAD,EAAsB;AAC3D,UACE,MAAK,KAAL,CAAW,OAAX,KAAuB,IAAvB,IACA,MAAK,MADL,IAEA,MAAK,GAAL,CAAS,OAAT,KAAqB,IAHvB,EAIE;AACA,YACE,KAAK,CAAC,MAAN,YAAwB,OAAxB,IACA,CAAC,MAAK,GAAL,CAAS,OAAT,CAAiB,QAAjB,CAA0B,KAAK,CAAC,MAAhC,CAFH,EAGE;AACA,gBAAK,MAAL,GAAc,KAAd;AACD;AACF;AACF,KAbgB;;AAeA,UAAA,aAAA,GAAgB,UAAC,GAAD;AAAA,aAAiC,UAChE,KADgE,EAE9D;AACF,YAAI,MAAK,KAAL,CAAW,OAAX,KAAuB,SAA3B,EAAsC;AACpC,gBAAK,KAAL,CAAW,OAAX,CAAmB,KAAnB;AACD;;AACD,QAAA,GAAG,CAAC,SAAJ,CAAc,CAAC,GAAG,CAAC,MAAnB;AACD,OAPgC;AAAA,KAAhB;;AArGf,UAAK,KAAL,GAAa;AAAE,MAAA,MAAM,EAAE,KAAK,CAAC,MAAN,KAAiB;AAA3B,KAAb;AAFyC;AAG1C;;AAXH;AAAA;AAAA,wCAa0B;AACtB,UAAI,KAAK,KAAL,CAAW,QAAX,KAAwB,IAA5B,EAAkC;AAChC,QAAA,QAAQ,CAAC,gBAAT,CAA0B,OAA1B,EAAmC,KAAK,mBAAxC;AACD;AACF;AAjBH;AAAA;AAAA,2CAmB6B;AACzB,MAAA,QAAQ,CAAC,mBAAT,CAA6B,OAA7B,EAAsC,KAAK,mBAA3C;AACD;AArBH;AAAA;AAAA,6BAuBe;AAAA;;AACL,UAAA,EAAA,GAAA,KAAA,KAAA;AAAA,UACJ,EADI,GAWF,EAXE,CACJ,EADI;AAAA,UAEJ,MAFI,GAWF,EAXE,CAEJ,MAFI;AAAA,UAGO,gBAHP,GAWF,EAXE,CAGJ,SAHI;AAAA,UAIJ,QAJI,GAWF,EAXE,CAIJ,QAJI;AAAA,UAKJ,QALI,GAWF,EAXE,CAKJ,QALI;AAAA,UAMJ,SANI,GAWF,EAXE,CAMJ,SANI;AAAA,UAOJ,QAPI,GAWF,EAXE,CAOJ,QAPI;AAAA,UAQJ,OARI,GAWF,EAXE,CAQJ,OARI;AAAA,UASJ,OATI,GAWF,EAXE,CASJ,OATI;AAAA,UAUJ,GAVI,GAWF,EAXE,CAUJ,GAVI;AAAA,UAWJ,EAXI,GAWF,EAXE,CAWJ,EAXI;AAAA,UAYJ,IAZI,GAYJ,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,WAAA,EAAA,UAAA,EAAA,UAAA,EAAA,WAAA,EAAA,UAAA,EAAA,SAAA,EAAA,SAAA,EAAA,KAAA,EAAA,IAAA,CAAA,CAZI;;AAeN,UAAM,SAAS,GAAG,UAAU,CAC1B,aAD0B,EAE1B;AACE,wBAAgB,QADlB;AAEE,2BAAmB,EAFrB;AAGE,qBAAa,KAAK,MAHpB;AAIE,uBAAe,QAJjB;AAKE,wBAAgB,SALlB;AAME,kBAAU;AANZ,OAF0B,EAU1B,gBAV0B,CAA5B;AAaA,UAAM,GAAG,GAAG,WAAW,CAAC,KAAK,GAAN,EAAW,QAAX,CAAvB;;AAEA,UAAI,QAAQ,KAAK,IAAjB,EAAuB;AACrB,YAAM,UAAU,GAAG,EAAE,KAAK,GAAP,GAAa,KAAb,GAAqB,EAAxC;AAEA,eACE,KAAA,CAAA,aAAA,CAAC,iBAAiB,CAAC,QAAnB,EAA2B;AACzB,UAAA,KAAK,EAAE;AACL,YAAA,MAAM,EAAE,KAAK,MADR;AAEL,YAAA,SAAS,EAAE,mBAAC,KAAD;AAAA,qBAAqB,MAAI,CAAC,MAAL,GAAc,KAAnC;AAAA;AAFN;AADkB,SAA3B,EAME,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AAAC,UAAA,EAAE,EAAE,UAAL;AAAiB,UAAA,SAAS,EAAE,SAA5B;AAAuC,UAAA,GAAG,EAAE;AAA5C,SAAA,EAAqD,IAArD,CAAR,CANF,CADF;AAUD;;AAED,aACE,KAAA,CAAA,aAAA,CAAC,iBAAiB,CAAC,QAAnB,EAA2B,IAA3B,EACG,UAAA,GAAG;AAAA,eACF,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,UAAA,EAAE,EAAE,EADE;AAEN,UAAA,SAAS,EAAE,SAFL;AAGN,UAAA,OAAO,EAAE,MAAI,CAAC,aAAL,CAAmB,GAAnB,CAHH;AAIN,UAAA,GAAG,EAAE;AAJC,SAAA,EAKF,IALE,CAAR,CADE;AAAA,OADN,CADF;AAaD;AAlFH;AAAA;AAAA,wBAoFoB;AAChB,aAAO,KAAK,KAAL,CAAW,OAAX,KAAuB,IAAvB,GACH,KAAK,KAAL,CAAW,MAAX,KAAsB,IADnB,GAEH,KAAK,KAAL,CAAW,MAFf;AAGD,KAxFH;AAAA,sBA0FqB,KA1FrB,EA0FmC;AAC/B,UAAI,KAAK,KAAL,CAAW,OAAX,KAAuB,IAA3B,EAAiC;AAC/B,aAAK,QAAL,CAAc;AAAE,UAAA,MAAM,EAAE;AAAV,SAAd;AACD;AACF;AA9FH;;AAAA;AAAA,EAAyC,KAAK,CAAC,aAA/C;AAIgB,mBAAA,CAAA,WAAA,GAAc,uBAAd","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { Generic } from \"../../base\";\nimport { combineRefs } from \"../../utils\";\nimport { NavbarItemContext, } from \"./navbar-item-context\";\nexport class NavbarItemContainer extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.handleDocumentClick = (event) => {\n            if (this.props.managed !== true &&\n                this.active &&\n                this.ref.current !== null) {\n                if (event.target instanceof Element &&\n                    !this.ref.current.contains(event.target)) {\n                    this.active = false;\n                }\n            }\n        };\n        this.handleOnClick = (ctx) => (event) => {\n            if (this.props.onClick !== undefined) {\n                this.props.onClick(event);\n            }\n            ctx.setActive(!ctx.active);\n        };\n        this.state = { active: props.active === true };\n    }\n    componentDidMount() {\n        if (this.props.dropdown === true) {\n            document.addEventListener(\"click\", this.handleDocumentClick);\n        }\n    }\n    componentWillUnmount() {\n        document.removeEventListener(\"click\", this.handleDocumentClick);\n    }\n    render() {\n        const _a = this.props, { as, active, className: initialClassName, dropdown, expanded, hoverable, innerRef, managed, onClick, tab, up } = _a, rest = tslib_1.__rest(_a, [\"as\", \"active\", \"className\", \"dropdown\", \"expanded\", \"hoverable\", \"innerRef\", \"managed\", \"onClick\", \"tab\", \"up\"]);\n        const className = classNames(\"navbar-item\", {\n            \"has-dropdown\": dropdown,\n            \"has-dropdown-up\": up,\n            \"is-active\": this.active,\n            \"is-expanded\": expanded,\n            \"is-hoverable\": hoverable,\n            \"is-tab\": tab,\n        }, initialClassName);\n        const ref = combineRefs(this.ref, innerRef);\n        if (dropdown === true) {\n            const asOverride = as === \"a\" ? \"div\" : as;\n            return (React.createElement(NavbarItemContext.Provider, { value: {\n                    active: this.active,\n                    setActive: (value) => (this.active = value),\n                } },\n                React.createElement(Generic, Object.assign({ as: asOverride, className: className, ref: ref }, rest))));\n        }\n        return (React.createElement(NavbarItemContext.Consumer, null, ctx => (React.createElement(Generic, Object.assign({ as: as, className: className, onClick: this.handleOnClick(ctx), ref: ref }, rest)))));\n    }\n    get active() {\n        return this.props.managed === true\n            ? this.props.active === true\n            : this.state.active;\n    }\n    set active(value) {\n        if (this.props.managed !== true) {\n            this.setState({ active: value });\n        }\n    }\n}\nNavbarItemContainer.displayName = \"Navbar.Item.Container\";\n//# sourceMappingURL=navbar-item-container.js.map"]},"metadata":{},"sourceType":"module"}