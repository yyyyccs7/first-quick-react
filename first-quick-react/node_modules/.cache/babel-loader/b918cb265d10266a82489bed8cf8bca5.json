{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { Generic } from \"../../base\";\nimport { combineRefs } from \"../../utils\";\nimport { DropdownContext } from \"./dropdown-context\";\nexport const DROPDOWN_DEFAULTS = {\n  alignments: [\"right\"]\n};\nconst initialState = {\n  active: false\n};\nexport class DropdownContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n\n    this.handleClick = event => {\n      if (this.props.managed !== true && this.active && this.ref.current !== null) {\n        if (event.target instanceof Element && !this.ref.current.contains(event.target)) {\n          this.active = false;\n        }\n      }\n    };\n\n    this.state = {\n      active: props.active === true\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"click\", this.handleClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"click\", this.handleClick);\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      active,\n      align,\n      className,\n      hoverable,\n      innerRef,\n      managed,\n      up\n    } = _a,\n          rest = tslib_1.__rest(_a, [\"active\", \"align\", \"className\", \"hoverable\", \"innerRef\", \"managed\", \"up\"]);\n\n    return React.createElement(DropdownContext.Provider, {\n      value: {\n        active: this.active,\n        setActive: value => this.active = value\n      }\n    }, React.createElement(Generic, Object.assign({\n      className: classNames(\"dropdown\", {\n        [`is-${align}`]: align,\n        \"is-active\": this.active,\n        \"is-hoverable\": hoverable,\n        \"is-up\": up\n      }, className),\n      ref: combineRefs(this.ref, innerRef)\n    }, rest)));\n  }\n\n  get active() {\n    return this.props.managed === true ? this.props.active === true : this.state.active;\n  }\n\n  set active(value) {\n    if (this.props.managed !== true) {\n      this.setState({\n        active: value\n      });\n    }\n  }\n\n}\nDropdownContainer.displayName = \"Dropdown.Container\";","map":{"version":3,"sources":["../../../src/components/dropdown/dropdown-container.tsx"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,OAAT,QAAwB,YAAxB;AAGA,SAAS,WAAT,QAA4B,aAA5B;AACA,SAAS,eAAT,QAAgC,oBAAhC;AAEA,OAAO,MAAM,iBAAiB,GAAG;AAC/B,EAAA,UAAU,EAAE,CAAC,OAAD;AADmB,CAA1B;AA4BP,MAAM,YAAY,GAAG;AACnB,EAAA,MAAM,EAAE;AADW,CAArB;AAMA,OAAM,MAAO,iBAAP,SAAiC,KAAK,CAAC,aAAvC,CAGL;AAKC,EAAA,WAAA,CAAY,KAAZ,EAAyC;AACvC,UAAM,KAAN;AAHe,SAAA,GAAA,GAAM,KAAK,CAAC,SAAN,EAAN;;AAgEA,SAAA,WAAA,GAAe,KAAD,IAAsB;AACnD,UACE,KAAK,KAAL,CAAW,OAAX,KAAuB,IAAvB,IACA,KAAK,MADL,IAEA,KAAK,GAAL,CAAS,OAAT,KAAqB,IAHvB,EAIE;AACA,YACE,KAAK,CAAC,MAAN,YAAwB,OAAxB,IACA,CAAC,KAAK,GAAL,CAAS,OAAT,CAAiB,QAAjB,CAA0B,KAAK,CAAC,MAAhC,CAFH,EAGE;AACA,eAAK,MAAL,GAAc,KAAd;AACD;AACF;AACF,KAbgB;;AA5Df,SAAK,KAAL,GAAa;AAAE,MAAA,MAAM,EAAE,KAAK,CAAC,MAAN,KAAiB;AAA3B,KAAb;AACD;;AAEM,EAAA,iBAAiB,GAAA;AACtB,IAAA,QAAQ,CAAC,gBAAT,CAA0B,OAA1B,EAAmC,KAAK,WAAxC;AACD;;AAEM,EAAA,oBAAoB,GAAA;AACzB,IAAA,QAAQ,CAAC,mBAAT,CAA6B,OAA7B,EAAsC,KAAK,WAA3C;AACD;;AAEM,EAAA,MAAM,GAAA;AACX,UAAM,EAAA,GAAA,KAAA,KAAN;AAAA,UAAM;AACJ,MAAA,MADI;AAEJ,MAAA,KAFI;AAGJ,MAAA,SAHI;AAIJ,MAAA,SAJI;AAKJ,MAAA,QALI;AAMJ,MAAA,OANI;AAOJ,MAAA;AAPI,QAOF,EAPJ;AAAA,UAQE,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,QAAA,EAAA,OAAA,EAAA,WAAA,EAAA,WAAA,EAAA,UAAA,EAAA,SAAA,EAAA,IAAA,CAAA,CARF;;AAWA,WACE,KAAA,CAAA,aAAA,CAAC,eAAe,CAAC,QAAjB,EAAyB;AACvB,MAAA,KAAK,EAAE;AACL,QAAA,MAAM,EAAE,KAAK,MADR;AAEL,QAAA,SAAS,EAAG,KAAD,IAAqB,KAAK,MAAL,GAAc;AAFzC;AADgB,KAAzB,EAME,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,MAAA,SAAS,EAAE,UAAU,CACnB,UADmB,EAEnB;AACE,SAAC,MAAM,KAAK,EAAZ,GAAiB,KADnB;AAEE,qBAAa,KAAK,MAFpB;AAGE,wBAAgB,SAHlB;AAIE,iBAAS;AAJX,OAFmB,EAQnB,SARmB,CADf;AAWN,MAAA,GAAG,EAAE,WAAW,CAAC,KAAK,GAAN,EAAW,QAAX;AAXV,KAAA,EAYF,IAZE,CAAR,CANF,CADF;AAuBD;;AAED,MAAY,MAAZ,GAAkB;AAChB,WAAO,KAAK,KAAL,CAAW,OAAX,KAAuB,IAAvB,GACH,KAAK,KAAL,CAAW,MAAX,KAAsB,IADnB,GAEH,KAAK,KAAL,CAAW,MAFf;AAGD;;AAED,MAAY,MAAZ,CAAmB,KAAnB,EAAiC;AAC/B,QAAI,KAAK,KAAL,CAAW,OAAX,KAAuB,IAA3B,EAAiC;AAC/B,WAAK,QAAL,CAAc;AAAE,QAAA,MAAM,EAAE;AAAV,OAAd;AACD;AACF;;AAjEF;AACe,iBAAA,CAAA,WAAA,GAAc,oBAAd","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { Generic } from \"../../base\";\nimport { combineRefs } from \"../../utils\";\nimport { DropdownContext } from \"./dropdown-context\";\nexport const DROPDOWN_DEFAULTS = {\n    alignments: [\"right\"],\n};\nconst initialState = {\n    active: false,\n};\nexport class DropdownContainer extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.handleClick = (event) => {\n            if (this.props.managed !== true &&\n                this.active &&\n                this.ref.current !== null) {\n                if (event.target instanceof Element &&\n                    !this.ref.current.contains(event.target)) {\n                    this.active = false;\n                }\n            }\n        };\n        this.state = { active: props.active === true };\n    }\n    componentDidMount() {\n        document.addEventListener(\"click\", this.handleClick);\n    }\n    componentWillUnmount() {\n        document.removeEventListener(\"click\", this.handleClick);\n    }\n    render() {\n        const _a = this.props, { active, align, className, hoverable, innerRef, managed, up } = _a, rest = tslib_1.__rest(_a, [\"active\", \"align\", \"className\", \"hoverable\", \"innerRef\", \"managed\", \"up\"]);\n        return (React.createElement(DropdownContext.Provider, { value: {\n                active: this.active,\n                setActive: (value) => (this.active = value),\n            } },\n            React.createElement(Generic, Object.assign({ className: classNames(\"dropdown\", {\n                    [`is-${align}`]: align,\n                    \"is-active\": this.active,\n                    \"is-hoverable\": hoverable,\n                    \"is-up\": up,\n                }, className), ref: combineRefs(this.ref, innerRef) }, rest))));\n    }\n    get active() {\n        return this.props.managed === true\n            ? this.props.active === true\n            : this.state.active;\n    }\n    set active(value) {\n        if (this.props.managed !== true) {\n            this.setState({ active: value });\n        }\n    }\n}\nDropdownContainer.displayName = \"Dropdown.Container\";\n//# sourceMappingURL=dropdown-container.js.map"]},"metadata":{},"sourceType":"module"}