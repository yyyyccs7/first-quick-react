{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { MessageBody } from \"./message-body\";\nimport { MessageHeader } from \"./message-header\";\nexport const MESSAGE_DEFAULTS = {\n  sizes: [\"small\", \"medium\", \"large\"]\n};\nexport const Message = Object.assign(forwardRefAs((_a, ref) => {\n  var {\n    className,\n    color,\n    size\n  } = _a,\n      rest = tslib_1.__rest(_a, [\"className\", \"color\", \"size\"]);\n\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"message\", {\n      [`is-${color}`]: color,\n      [`is-${size}`]: size\n    }, className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"article\"\n}), {\n  Body: MessageBody,\n  Header: MessageHeader\n});\nMessage.displayName = \"Message\";\nMessage.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};","map":{"version":3,"sources":["../../../src/components/message/message.tsx"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAIA,SAAS,WAAT,QAA4B,gBAA5B;AACA,SAAS,aAAT,QAA8B,kBAA9B;AAEA,OAAO,MAAM,gBAAgB,GAAG;AAC9B,EAAA,KAAK,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB;AADuB,CAAzB;AAsBP,OAAO,MAAM,OAAO,GAAG,MAAM,CAAC,MAAP,CACrB,YAAY,CACV,CAAC,EAAD,EAAsC,GAAtC,KAA6C;MAA5C;AAAE,IAAA,SAAF;AAAa,IAAA,KAAb;AAAoB,IAAA;AAApB,MAAwB,E;MAAE,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,WAAA,EAAA,OAAA,EAAA,MAAA,CAAA,C;;AAAmB,SAC5C,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,IAAA,SAAS,EAAE,UAAU,CACnB,SADmB,EAEnB;AACE,OAAC,MAAM,KAAK,EAAZ,GAAiB,KADnB;AAEE,OAAC,MAAM,IAAI,EAAX,GAAgB;AAFlB,KAFmB,EAMnB,SANmB,CADf;AASN,IAAA,GAAG,EAAE;AATC,GAAA,EAUF,IAVE,CAAR,CAD4C;AAa7C,CAdS,EAeV;AAAE,EAAA,EAAE,EAAE;AAAN,CAfU,CADS,EAkBrB;AACE,EAAA,IAAI,EAAE,WADR;AAEE,EAAA,MAAM,EAAE;AAFV,CAlBqB,CAAhB;AAwBP,OAAO,CAAC,WAAR,GAAsB,SAAtB;AACA,OAAO,CAAC,SAAR,GAAoB;AAClB,EAAA,KAAK,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CADW;AAElB,EAAA,IAAI,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB;AAFY,CAApB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { MessageBody } from \"./message-body\";\nimport { MessageHeader } from \"./message-header\";\nexport const MESSAGE_DEFAULTS = {\n    sizes: [\"small\", \"medium\", \"large\"],\n};\nexport const Message = Object.assign(forwardRefAs((_a, ref) => {\n    var { className, color, size } = _a, rest = tslib_1.__rest(_a, [\"className\", \"color\", \"size\"]);\n    return (React.createElement(Generic, Object.assign({ className: classNames(\"message\", {\n            [`is-${color}`]: color,\n            [`is-${size}`]: size,\n        }, className), ref: ref }, rest)));\n}, { as: \"article\" }), {\n    Body: MessageBody,\n    Header: MessageHeader,\n});\nMessage.displayName = \"Message\";\nMessage.propTypes = {\n    color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n//# sourceMappingURL=message.js.map"]},"metadata":{},"sourceType":"module"}