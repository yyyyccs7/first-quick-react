{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory } from \"./factory\";\nexport var makePropTypes = makePropTypesFactory(function (vars) {\n  return {\n    marginless: PropTypes.bool,\n    paddingless: PropTypes.bool,\n    radiusless: PropTypes.bool,\n    relative: PropTypes.bool,\n    shadowless: PropTypes.bool,\n    unselectable: PropTypes.bool\n  };\n});\nexport var transform = function transform(props) {\n  var className = props.className,\n      marginless = props.marginless,\n      paddingless = props.paddingless,\n      radiusless = props.radiusless,\n      relative = props.relative,\n      shadowless = props.shadowless,\n      unselectable = props.unselectable,\n      rest = tslib_1.__rest(props, [\"className\", \"marginless\", \"paddingless\", \"radiusless\", \"relative\", \"shadowless\", \"unselectable\"]);\n\n  return Object.assign({\n    className: classNames({\n      \"is-marginless\": marginless,\n      \"is-paddingless\": paddingless,\n      \"is-radiusless\": radiusless,\n      \"is-relative\": relative,\n      \"is-shadowless\": shadowless,\n      \"is-unselectable\": unselectable\n    }, className)\n  }, rest);\n};\nexport var makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);","map":{"version":3,"sources":["../../../src/base/helpers/other.ts"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AAEA,SACE,oBADF,EAEE,8BAFF,QAIO,WAJP;AAsBA,OAAO,IAAM,aAAa,GAAG,oBAAoB,CAAC,UAAA,IAAI;AAAA,SAAK;AACzD,IAAA,UAAU,EAAE,SAAS,CAAC,IADmC;AAEzD,IAAA,WAAW,EAAE,SAAS,CAAC,IAFkC;AAGzD,IAAA,UAAU,EAAE,SAAS,CAAC,IAHmC;AAIzD,IAAA,QAAQ,EAAE,SAAS,CAAC,IAJqC;AAKzD,IAAA,UAAU,EAAE,SAAS,CAAC,IALmC;AAMzD,IAAA,YAAY,EAAE,SAAS,CAAC;AANiC,GAAL;AAAA,CAAL,CAA1C;AASP,OAAO,IAAM,SAAS,GAAyC,SAAlD,SAAkD,CAAA,KAAK,EAAG;AAAA,MAEnE,SAFmE,GAUjE,KAViE,CAEnE,SAFmE;AAAA,MAGnE,UAHmE,GAUjE,KAViE,CAGnE,UAHmE;AAAA,MAInE,WAJmE,GAUjE,KAViE,CAInE,WAJmE;AAAA,MAKnE,UALmE,GAUjE,KAViE,CAKnE,UALmE;AAAA,MAMnE,QANmE,GAUjE,KAViE,CAMnE,QANmE;AAAA,MAOnE,UAPmE,GAUjE,KAViE,CAOnE,UAPmE;AAAA,MAQnE,YARmE,GAUjE,KAViE,CAQnE,YARmE;AAAA,MASnE,IATmE,GASnE,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,WAAA,EAAA,YAAA,EAAA,aAAA,EAAA,YAAA,EAAA,UAAA,EAAA,YAAA,EAAA,cAAA,CAAA,CATmE;;AAYrE,SAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,SAAS,EAAE,UAAU,CACnB;AACE,uBAAiB,UADnB;AAEE,wBAAkB,WAFpB;AAGE,uBAAiB,UAHnB;AAIE,qBAAe,QAJjB;AAKE,uBAAiB,UALnB;AAME,yBAAmB;AANrB,KADmB,EASnB,SATmB;AADvB,GAAA,EAYK,IAZL,CAAA;AAcD,CA1BM;AA4BP,OAAO,IAAM,uBAAuB,GAAG,8BAA8B,CACnE,aADmE,EAEnE,SAFmE,CAA9D","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory, } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n    marginless: PropTypes.bool,\n    paddingless: PropTypes.bool,\n    radiusless: PropTypes.bool,\n    relative: PropTypes.bool,\n    shadowless: PropTypes.bool,\n    unselectable: PropTypes.bool,\n}));\nexport const transform = props => {\n    const { className, marginless, paddingless, radiusless, relative, shadowless, unselectable } = props, rest = tslib_1.__rest(props, [\"className\", \"marginless\", \"paddingless\", \"radiusless\", \"relative\", \"shadowless\", \"unselectable\"]);\n    return Object.assign({ className: classNames({\n            \"is-marginless\": marginless,\n            \"is-paddingless\": paddingless,\n            \"is-radiusless\": radiusless,\n            \"is-relative\": relative,\n            \"is-shadowless\": shadowless,\n            \"is-unselectable\": unselectable,\n        }, className) }, rest);\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);\n//# sourceMappingURL=other.js.map"]},"metadata":{},"sourceType":"module"}