{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { NavbarItemContext } from \"./navbar-item-context\";\n\nconst handleOnClick = (onClick, ctx) => event => {\n  if (onClick !== undefined) {\n    onClick(event);\n  }\n\n  ctx.setActive(!ctx.active);\n};\n\nexport const NavbarLink = forwardRefAs((_a, ref) => {\n  var {\n    arrowless,\n    className,\n    onClick\n  } = _a,\n      rest = tslib_1.__rest(_a, [\"arrowless\", \"className\", \"onClick\"]);\n\n  return React.createElement(NavbarItemContext.Consumer, null, ctx => React.createElement(Generic, Object.assign({\n    className: classNames(\"navbar-link\", {\n      \"is-arrowless\": arrowless\n    }, className),\n    onClick: handleOnClick(onClick, ctx),\n    ref: ref\n  }, rest)));\n}, {\n  as: \"span\"\n});\nNavbarLink.displayName = \"Navbar.Link\";\nNavbarLink.propTypes = {\n  arrowless: PropTypes.bool,\n  onClick: PropTypes.func\n};","map":{"version":3,"sources":["../../../src/components/navbar/navbar-link.tsx"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAEA,SACE,iBADF,QAGO,uBAHP;;AAYA,MAAM,aAAa,GAAG,CACpB,OADoB,EAEpB,GAFoB,KAGhB,KAAD,IAA4B;AAC/B,MAAI,OAAO,KAAK,SAAhB,EAA2B;AACzB,IAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AACD,EAAA,GAAG,CAAC,SAAJ,CAAc,CAAC,GAAG,CAAC,MAAnB;AACD,CARD;;AAUA,OAAO,MAAM,UAAU,GAAG,YAAY,CACpC,CAAC,EAAD,EAA6C,GAA7C,KAAoD;MAAnD;AAAE,IAAA,SAAF;AAAa,IAAA,SAAb;AAAwB,IAAA;AAAxB,MAA+B,E;MAAE,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,WAAA,EAAA,WAAA,EAAA,SAAA,CAAA,C;;AAAmB,SACnD,KAAA,CAAA,aAAA,CAAC,iBAAiB,CAAC,QAAnB,EAA2B,IAA3B,EACG,GAAG,IACF,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,IAAA,SAAS,EAAE,UAAU,CACnB,aADmB,EAEnB;AAAE,sBAAgB;AAAlB,KAFmB,EAGnB,SAHmB,CADf;AAMN,IAAA,OAAO,EAAE,aAAa,CAAC,OAAD,EAAU,GAAV,CANhB;AAON,IAAA,GAAG,EAAE;AAPC,GAAA,EAQF,IARE,CAAR,CAFJ,CADmD;AAepD,CAhBmC,EAiBpC;AAAE,EAAA,EAAE,EAAE;AAAN,CAjBoC,CAA/B;AAoBP,UAAU,CAAC,WAAX,GAAyB,aAAzB;AACA,UAAU,CAAC,SAAX,GAAuB;AACrB,EAAA,SAAS,EAAE,SAAS,CAAC,IADA;AAErB,EAAA,OAAO,EAAE,SAAS,CAAC;AAFE,CAAvB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { NavbarItemContext, } from \"./navbar-item-context\";\nconst handleOnClick = (onClick, ctx) => (event) => {\n    if (onClick !== undefined) {\n        onClick(event);\n    }\n    ctx.setActive(!ctx.active);\n};\nexport const NavbarLink = forwardRefAs((_a, ref) => {\n    var { arrowless, className, onClick } = _a, rest = tslib_1.__rest(_a, [\"arrowless\", \"className\", \"onClick\"]);\n    return (React.createElement(NavbarItemContext.Consumer, null, ctx => (React.createElement(Generic, Object.assign({ className: classNames(\"navbar-link\", { \"is-arrowless\": arrowless }, className), onClick: handleOnClick(onClick, ctx), ref: ref }, rest)))));\n}, { as: \"span\" });\nNavbarLink.displayName = \"Navbar.Link\";\nNavbarLink.propTypes = {\n    arrowless: PropTypes.bool,\n    onClick: PropTypes.func,\n};\n//# sourceMappingURL=navbar-link.js.map"]},"metadata":{},"sourceType":"module"}