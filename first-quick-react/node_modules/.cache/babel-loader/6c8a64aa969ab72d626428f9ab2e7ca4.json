{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { LevelItem } from \"./level-item\";\nexport const Level = Object.assign(forwardRefAs((_a, ref) => {\n  var {\n    breakpoint,\n    className\n  } = _a,\n      rest = tslib_1.__rest(_a, [\"breakpoint\", \"className\"]);\n\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"level\", {\n      [`is-${breakpoint}`]: breakpoint\n    }, className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"nav\"\n}), {\n  Item: LevelItem\n});\nLevel.displayName = \"Level\";\nLevel.propTypes = {\n  breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};","map":{"version":3,"sources":["../../../src/components/level/level.tsx"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAGA,SAAS,SAAT,QAA0B,cAA1B;AAQA,OAAO,MAAM,KAAK,GAAG,MAAM,CAAC,MAAP,CACnB,YAAY,CACV,CAAC,EAAD,EAAqC,GAArC,KAA4C;MAA3C;AAAE,IAAA,UAAF;AAAc,IAAA;AAAd,MAAuB,E;MAAE,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,YAAA,EAAA,WAAA,CAAA,C;;AAAmB,SAC3C,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,IAAA,SAAS,EAAE,UAAU,CACnB,OADmB,EAEnB;AAAE,OAAC,MAAM,UAAU,EAAjB,GAAsB;AAAxB,KAFmB,EAGnB,SAHmB,CADf;AAMN,IAAA,GAAG,EAAE;AANC,GAAA,EAOF,IAPE,CAAR,CAD2C;AAU5C,CAXS,EAYV;AAAE,EAAA,EAAE,EAAE;AAAN,CAZU,CADO,EAenB;AAAE,EAAA,IAAI,EAAE;AAAR,CAfmB,CAAd;AAkBP,KAAK,CAAC,WAAN,GAAoB,OAApB;AACA,KAAK,CAAC,SAAN,GAAkB;AAChB,EAAA,UAAU,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB;AADI,CAAlB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { LevelItem } from \"./level-item\";\nexport const Level = Object.assign(forwardRefAs((_a, ref) => {\n    var { breakpoint, className } = _a, rest = tslib_1.__rest(_a, [\"breakpoint\", \"className\"]);\n    return (React.createElement(Generic, Object.assign({ className: classNames(\"level\", { [`is-${breakpoint}`]: breakpoint }, className), ref: ref }, rest)));\n}, { as: \"nav\" }), { Item: LevelItem });\nLevel.displayName = \"Level\";\nLevel.propTypes = {\n    breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n//# sourceMappingURL=level.js.map"]},"metadata":{},"sourceType":"module"}