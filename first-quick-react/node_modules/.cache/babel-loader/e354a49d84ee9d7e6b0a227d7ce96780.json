{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory } from \"./factory\";\nexport var makePropTypes = makePropTypesFactory(function (vars) {\n  return {\n    clipped: PropTypes.bool\n  };\n});\nexport var transform = function transform(props) {\n  var className = props.className,\n      clipped = props.clipped,\n      rest = tslib_1.__rest(props, [\"className\", \"clipped\"]);\n\n  return Object.assign({\n    className: classNames({\n      \"is-clipped\": clipped\n    }, className)\n  }, rest);\n};\nexport var makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);","map":{"version":3,"sources":["../../../src/base/helpers/overflow.ts"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AAEA,SACE,oBADF,EAEE,8BAFF,QAIO,WAJP;AAYA,OAAO,IAAM,aAAa,GAAG,oBAAoB,CAAC,UAAA,IAAI;AAAA,SAAK;AACzD,IAAA,OAAO,EAAE,SAAS,CAAC;AADsC,GAAL;AAAA,CAAL,CAA1C;AAIP,OAAO,IAAM,SAAS,GAA4C,SAArD,SAAqD,CAAA,KAAK,EAAG;AAAA,MAChE,SADgE,GAChC,KADgC,CAChE,SADgE;AAAA,MACrD,OADqD,GAChC,KADgC,CACrD,OADqD;AAAA,MAC5C,IAD4C,GAC5C,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,WAAA,EAAA,SAAA,CAAA,CAD4C;;AAGxE,SAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,SAAS,EAAE,UAAU,CAAC;AAAE,oBAAc;AAAhB,KAAD,EAA4B,SAA5B;AADvB,GAAA,EAEK,IAFL,CAAA;AAID,CAPM;AASP,OAAO,IAAM,uBAAuB,GAAG,8BAA8B,CACnE,aADmE,EAEnE,SAFmE,CAA9D","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory, } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n    clipped: PropTypes.bool,\n}));\nexport const transform = props => {\n    const { className, clipped } = props, rest = tslib_1.__rest(props, [\"className\", \"clipped\"]);\n    return Object.assign({ className: classNames({ \"is-clipped\": clipped }, className) }, rest);\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);\n//# sourceMappingURL=overflow.js.map"]},"metadata":{},"sourceType":"module"}