{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nexport const TEXTAREA_DEFAULTS = {\n  sizes: [\"small\", \"medium\", \"large\"],\n  states: [\"focused\", \"hovered\"]\n};\nexport const Textarea = forwardRefAs((_a, ref) => {\n  var {\n    className,\n    color,\n    fixedSize,\n    size,\n    state\n  } = _a,\n      rest = tslib_1.__rest(_a, [\"className\", \"color\", \"fixedSize\", \"size\", \"state\"]);\n\n  return React.createElement(Generic, Object.assign({\n    className: classNames(\"textarea\", {\n      \"has-fixed-size\": fixedSize,\n      [`is-${color}`]: color,\n      [`is-${size}`]: size,\n      [`is-${state}`]: state\n    }, className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"textarea\",\n  rows: 4\n});\nTextarea.displayName = \"Textarea\";\nTextarea.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fixedSize: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  state: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};","map":{"version":3,"sources":["../../../src/elements/form/textarea.tsx"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAKA,OAAO,MAAM,iBAAiB,GAAG;AAC/B,EAAA,KAAK,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CADwB;AAE/B,EAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ;AAFuB,CAA1B;AA0BP,OAAO,MAAM,QAAQ,GAAG,YAAY,CAClC,CAAC,EAAD,EAAwD,GAAxD,KAA+D;MAA9D;AAAE,IAAA,SAAF;AAAa,IAAA,KAAb;AAAoB,IAAA,SAApB;AAA+B,IAAA,IAA/B;AAAqC,IAAA;AAArC,MAA0C,E;MAAE,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,WAAA,EAAA,OAAA,EAAA,WAAA,EAAA,MAAA,EAAA,OAAA,CAAA,C;;AAAmB,SAC9D,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AACN,IAAA,SAAS,EAAE,UAAU,CACnB,UADmB,EAEnB;AACE,wBAAkB,SADpB;AAEE,OAAC,MAAM,KAAK,EAAZ,GAAiB,KAFnB;AAGE,OAAC,MAAM,IAAI,EAAX,GAAgB,IAHlB;AAIE,OAAC,MAAM,KAAK,EAAZ,GAAiB;AAJnB,KAFmB,EAQnB,SARmB,CADf;AAWN,IAAA,GAAG,EAAE;AAXC,GAAA,EAYF,IAZE,CAAR,CAD8D;AAe/D,CAhBiC,EAiBlC;AACE,EAAA,EAAE,EAAE,UADN;AAEE,EAAA,IAAI,EAAE;AAFR,CAjBkC,CAA7B;AAuBP,QAAQ,CAAC,WAAT,GAAuB,UAAvB;AACA,QAAQ,CAAC,SAAT,GAAqB;AACnB,EAAA,KAAK,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CADY;AAEnB,EAAA,SAAS,EAAE,SAAS,CAAC,IAFF;AAGnB,EAAA,IAAI,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CAHa;AAInB,EAAA,KAAK,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB;AAJY,CAArB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nexport const TEXTAREA_DEFAULTS = {\n    sizes: [\"small\", \"medium\", \"large\"],\n    states: [\"focused\", \"hovered\"],\n};\nexport const Textarea = forwardRefAs((_a, ref) => {\n    var { className, color, fixedSize, size, state } = _a, rest = tslib_1.__rest(_a, [\"className\", \"color\", \"fixedSize\", \"size\", \"state\"]);\n    return (React.createElement(Generic, Object.assign({ className: classNames(\"textarea\", {\n            \"has-fixed-size\": fixedSize,\n            [`is-${color}`]: color,\n            [`is-${size}`]: size,\n            [`is-${state}`]: state,\n        }, className), ref: ref }, rest)));\n}, {\n    as: \"textarea\",\n    rows: 4,\n});\nTextarea.displayName = \"Textarea\";\nTextarea.propTypes = {\n    color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    fixedSize: PropTypes.bool,\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    state: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n//# sourceMappingURL=textarea.js.map"]},"metadata":{},"sourceType":"module"}