{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { Generic } from \"../../base\";\nimport { canUseDOM } from \"../../utils\";\nimport { NavbarContext } from \"./navbar-context\";\nexport const NAVBAR_DEFAULTS = {\n  fixedAlignments: [\"top\", \"bottom\"]\n};\nexport class NavbarContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: props.active === true\n    };\n  }\n\n  componentWillUnmount() {\n    const {\n      fixed\n    } = this.props;\n    const html = this.document.querySelector(\"html\");\n\n    if (html !== null) {\n      html.classList.remove(`has-navbar-fixed-${fixed}`);\n    }\n  }\n\n  render() {\n    this.manageHtmlAttributes();\n\n    const _a = this.props,\n          {\n      active,\n      className,\n      color,\n      fixed,\n      innerRef,\n      managed,\n      transparent\n    } = _a,\n          rest = tslib_1.__rest(_a, [\"active\", \"className\", \"color\", \"fixed\", \"innerRef\", \"managed\", \"transparent\"]);\n\n    return React.createElement(NavbarContext.Provider, {\n      value: {\n        active: this.active,\n        setActive: value => {\n          this.active = value;\n        }\n      }\n    }, React.createElement(Generic, Object.assign({\n      className: classNames(\"navbar\", {\n        \"is-transparent\": transparent,\n        [`is-fixed-${fixed}`]: fixed,\n        [`is-${color}`]: color\n      }, className),\n      ref: innerRef,\n      role: \"navigation\"\n    }, rest)));\n  }\n\n  get active() {\n    return this.props.managed === true ? this.props.active === true : this.state.active;\n  }\n\n  set active(value) {\n    if (this.props.managed !== true) {\n      this.setState({\n        active: value\n      });\n    }\n  }\n\n  get document() {\n    return this.props.document !== undefined ? this.props.document : document;\n  }\n\n  manageHtmlAttributes() {\n    if (canUseDOM()) {\n      const html = this.document.querySelector(\"html\");\n\n      if (html !== null) {\n        html.classList.remove(\"has-navbar-fixed-top\");\n        html.classList.remove(\"has-navbar-fixed-bottom\");\n\n        if (this.props.fixed !== undefined) {\n          html.classList.add(`has-navbar-fixed-${this.props.fixed}`);\n        }\n      }\n    }\n  }\n\n}\nNavbarContainer.defaultProps = {\n  transparent: false\n};\nNavbarContainer.displayName = \"Navbar.Container\";","map":{"version":3,"sources":["../../../src/components/navbar/navbar-container.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { Generic } from \"../../base\";\nimport { canUseDOM } from \"../../utils\";\nimport { NavbarContext } from \"./navbar-context\";\nexport const NAVBAR_DEFAULTS = {\n    fixedAlignments: [\"top\", \"bottom\"],\n};\nexport class NavbarContainer extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = { active: props.active === true };\n    }\n    componentWillUnmount() {\n        const { fixed } = this.props;\n        const html = this.document.querySelector(\"html\");\n        if (html !== null) {\n            html.classList.remove(`has-navbar-fixed-${fixed}`);\n        }\n    }\n    render() {\n        this.manageHtmlAttributes();\n        const _a = this.props, { active, className, color, fixed, innerRef, managed, transparent } = _a, rest = tslib_1.__rest(_a, [\"active\", \"className\", \"color\", \"fixed\", \"innerRef\", \"managed\", \"transparent\"]);\n        return (React.createElement(NavbarContext.Provider, { value: {\n                active: this.active,\n                setActive: (value) => {\n                    this.active = value;\n                },\n            } },\n            React.createElement(Generic, Object.assign({ className: classNames(\"navbar\", {\n                    \"is-transparent\": transparent,\n                    [`is-fixed-${fixed}`]: fixed,\n                    [`is-${color}`]: color,\n                }, className), ref: innerRef, role: \"navigation\" }, rest))));\n    }\n    get active() {\n        return this.props.managed === true\n            ? this.props.active === true\n            : this.state.active;\n    }\n    set active(value) {\n        if (this.props.managed !== true) {\n            this.setState({ active: value });\n        }\n    }\n    get document() {\n        return this.props.document !== undefined ? this.props.document : document;\n    }\n    manageHtmlAttributes() {\n        if (canUseDOM()) {\n            const html = this.document.querySelector(\"html\");\n            if (html !== null) {\n                html.classList.remove(\"has-navbar-fixed-top\");\n                html.classList.remove(\"has-navbar-fixed-bottom\");\n                if (this.props.fixed !== undefined) {\n                    html.classList.add(`has-navbar-fixed-${this.props.fixed}`);\n                }\n            }\n        }\n    }\n}\nNavbarContainer.defaultProps = {\n    transparent: false,\n};\nNavbarContainer.displayName = \"Navbar.Container\";\n//# sourceMappingURL=navbar-container.js.map"]},"metadata":{},"sourceType":"module"}